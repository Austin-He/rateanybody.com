{"version":3,"file":"upload.bundle.js","mappings":"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","sources":["webpack://arweavestuff/./src/js/walletConfig.js","webpack://arweavestuff/./src/js/upload.js"],"sourcesContent":["// walletConfig.js - Simplified wallet management system\n// Uses environment variable WALLET_JSON_BASE64 exclusively, injected by webpack\n\n/**\n * New simplified wallet management:\n * - Uses Base64 encoded wallet from environment variable WALLET_JSON_BASE64\n * - Environment variable is injected at build time via webpack\n * - Works the same in both development and production\n * \n * SECURITY NOTE: Never commit the actual wallet to the repository.\n * Always use the environment variable approach.\n */\n\n// Wallet utilities\nconst walletConfig = {\n  // Get the wallet data - returns a Promise that resolves to the wallet JSON\n  getWallet: async function() {\n    try {\n      console.log('Loading wallet from environment variable');\n      \n      // Check for environment variable (injected by webpack)\n      if (!process.env.WALLET_JSON_BASE64) {\n        throw new Error('No WALLET_JSON_BASE64 environment variable found');\n      }\n      \n      // Decode base64 wallet\n      const walletData = atob(process.env.WALLET_JSON_BASE64);\n      const wallet = JSON.parse(walletData);\n      console.log('âœ“ Successfully loaded wallet from environment variable');\n      \n      // Verify wallet structure\n      if (!wallet.kty || !wallet.n || !wallet.e || !wallet.d) {\n        console.error('WARNING: Wallet loaded from environment variable appears incomplete');\n      }\n      \n      return wallet;\n    } catch (error) {\n      console.error('ERROR: Failed to load wallet from environment variable:', error);\n      throw new Error(`Wallet loading failed: ${error.message}`);\n    }\n  },\n  \n  // Helper to convert a wallet JSON to base64 for environment variable\n  walletToBase64: function(walletJson) {\n    try {\n      const walletStr = JSON.stringify(walletJson);\n      return btoa(walletStr);\n    } catch (error) {\n      console.error('Failed to convert wallet to base64:', error);\n      throw error;\n    }\n  },\n  \n  // Get wallet environment info (for debugging)\n  getEnvironmentInfo: function() {\n    return {\n      hasEnvVar: typeof process !== 'undefined' && \n                process.env && \n                !!process.env[WALLET_ENV_VAR],\n      envVarName: WALLET_ENV_VAR\n    };\n  }\n};\n\nexport default walletConfig;\n","// Maximum data size in bytes (50 KB)\nconst MAX_DATA_SIZE = 50 * 1024;\n\n// State variables\nlet wallet;\nlet arweave;\nlet walletAddress = '';\nlet walletBalance = 0;\n\n// Import wallet configuration module\nimport walletConfig from './walletConfig';\n\n// Initialize dependencies\nasync function init() {\n    try {\n        // Initialize Arweave\n        arweave = window.Arweave.init({\n            host: 'arweave.net',\n            port: 443,\n            protocol: 'https'\n        });\n        \n        // Load our managed wallet\n        await loadWallet();\n        \n        // Update UI with wallet status\n        updateWalletStatus();\n    } catch (error) {\n        console.error('Initialization error:', error);\n        showError('Failed to initialize: ' + error.message);\n    }\n}\n\n// DOM Elements reference declaration\nlet uploadButton;\nlet uploadStatus;\nlet ratingForm;\nlet scoreInput;\nlet scoreDisplay;\n\n// DOM ready function to ensure elements are loaded\nfunction initDomElements() {\n    console.log('initDomElements called');\n    \n    // Debug: Check all HTML elements\n    const allElements = document.querySelectorAll('*');\n    console.log(`Found ${allElements.length} elements in document`);\n    \n    uploadButton = document.getElementById('uploadButton');\n    uploadStatus = document.getElementById('uploadStatus');\n    ratingForm = document.getElementById('ratingForm');\n    scoreInput = document.getElementById('score');\n    scoreDisplay = document.getElementById('scoreDisplay');\n    \n    // Debug: Log exact elements\n    console.log('DOM element references:', {\n        uploadButton, \n        ratingForm, \n        scoreInput, \n        scoreDisplay\n    });\n    \n    // Debug: Verify slider element\n    console.log('Looking for slider:', document.querySelector('input[type=\"range\"]'));\n    \n    // Set up rating score display functionality\n    if (scoreInput && scoreDisplay) {\n        console.log('Slider and display elements found, setting up event listeners');\n        \n        // Directly set some initial value to see if it works\n        scoreDisplay.textContent = scoreInput.value;\n        scoreDisplay.style.backgroundColor = 'lightblue';\n        console.log('Set initial display:', scoreInput.value);\n        \n        // Add event listener with inline function for debugging\n        scoreInput.addEventListener('input', function() {\n            console.log('Slider moved to:', this.value);\n            scoreDisplay.textContent = this.value;\n            scoreDisplay.style.backgroundColor = 'lightgreen';\n        });\n        \n        // Also add the main handler\n        scoreInput.addEventListener('input', updateScoreDisplay);\n        \n        // Debug: Verify listener was added\n        console.log('Event listeners added to slider');\n    } else {\n        console.error('Slider elements not found!', {\n            scoreInputExists: !!scoreInput,\n            scoreDisplayExists: !!scoreDisplay\n        });\n        \n        // Try again with a delay\n        setTimeout(() => {\n            console.log('Trying to find slider elements again after delay...');\n            scoreInput = document.getElementById('score');\n            scoreDisplay = document.getElementById('scoreDisplay');\n            \n            if (scoreInput && scoreDisplay) {\n                console.log('Found slider elements after delay, setting up...');\n                scoreInput.addEventListener('input', updateScoreDisplay);\n                updateScoreDisplay();\n            }\n        }, 1000);\n    }\n    \n    // Handle form submission\n    if (ratingForm) {\n        ratingForm.addEventListener('submit', handleFormSubmit);\n    } else {\n        console.error('Rating form not found!');\n    }\n}\n\n// Function to update the score display\nfunction updateScoreDisplay() {\n    if (!scoreInput || !scoreDisplay) return;\n    \n    scoreDisplay.textContent = scoreInput.value;\n    \n    // Update color based on score\n    const score = parseInt(scoreInput.value);\n    scoreDisplay.className = 'ml-3 text-xl font-bold px-3 py-1 rounded-full min-w-[3rem] text-center';\n    \n    if (score >= 8) {\n        scoreDisplay.classList.add('bg-green-100', 'text-green-800');\n    } else if (score >= 6) {\n        scoreDisplay.classList.add('bg-blue-100', 'text-blue-800');\n    } else if (score >= 4) {\n        scoreDisplay.classList.add('bg-yellow-100', 'text-yellow-800');\n    } else if (score >= 2) {\n        scoreDisplay.classList.add('bg-orange-100', 'text-orange-800');\n    } else {\n        scoreDisplay.classList.add('bg-red-100', 'text-red-800');\n    }\n}\n\n// Load our wallet using the walletConfig module\nasync function loadWallet() {\n    try {\n        // Get wallet from our config module (handles env vars in production)\n        wallet = await walletConfig.getWallet();\n        \n        walletAddress = await arweave.wallets.jwkToAddress(wallet);\n        const balance = await arweave.wallets.getBalance(walletAddress);\n        walletBalance = arweave.ar.winstonToAr(balance);\n        \n        console.log(`Wallet loaded: ${walletAddress.substring(0, 8)}... | Balance: ${walletBalance} AR`);\n        return true;\n    } catch (error) {\n        console.error('Error loading wallet:', error);\n        return false;\n    }\n}\n\n// Update wallet status in UI (if we want to show it)\nfunction updateWalletStatus() {\n    const walletStatusEl = document.createElement('div');\n    walletStatusEl.className = 'fixed bottom-4 right-4 bg-white shadow-lg rounded-lg p-3 text-sm border border-gray-200';\n    \n    if (wallet && walletAddress) {\n        walletStatusEl.innerHTML = `\n            <div class=\"flex items-center text-gray-700\">\n                <div class=\"h-2 w-2 rounded-full bg-green-500 mr-2\"></div>\n                <span class=\"font-medium\">System wallet ready</span>\n                <span class=\"mx-1 text-gray-400\">|</span>\n                <span>${walletBalance} AR</span>\n            </div>\n        `;\n    } else {\n        walletStatusEl.innerHTML = `\n            <div class=\"flex items-center text-red-600\">\n                <div class=\"h-2 w-2 rounded-full bg-red-500 mr-2\"></div>\n                <span>System wallet unavailable</span>\n            </div>\n        `;\n    }\n    \n    document.body.appendChild(walletStatusEl);\n    \n    // Hide after 5 seconds\n    setTimeout(() => {\n        walletStatusEl.style.opacity = '0';\n        walletStatusEl.style.transition = 'opacity 0.5s';\n        setTimeout(() => walletStatusEl.remove(), 500);\n    }, 5000);\n}\n\n// Handle form submission\nasync function handleFormSubmit(e) {\n    e.preventDefault();\n    \n    if (!wallet) {\n        showError('System wallet is not available. Please try again later or use the Google Form option.');\n        return;\n    }\n    \n    try {\n        // Disable button and show loading state\n        uploadButton.disabled = true;\n        uploadButton.innerHTML = `\n            <svg class=\"animate-spin -ml-1 mr-2 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            Processing...\n        `;\n        \n        uploadStatus.innerHTML = `\n            <div class=\"bg-blue-50 border-l-4 border-blue-500 p-4 rounded\">\n                <div class=\"flex items-center\">\n                    <svg class=\"animate-pulse h-5 w-5 text-blue-500 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                    <p class=\"text-sm text-blue-700\">Uploading your rating to Arweave...</p>\n                </div>\n            </div>\n        `;\n\n        // Collect form data\n        const ratingData = {\n            firstName: document.getElementById('firstName').value.trim(),\n            middleName: document.getElementById('middleName').value.trim(),\n            lastName: document.getElementById('lastName').value.trim(),\n            location: document.getElementById('location').value.trim(),\n            associations: document.getElementById('associations').value.trim(),\n            score: parseInt(document.getElementById('score').value),\n            comments: document.getElementById('comments').value.trim(),\n            timestamp: Math.floor(Date.now() / 1000)\n        };\n\n        // Convert to JSON\n        const jsonData = JSON.stringify(ratingData);\n\n        // Check data size\n        const dataSize = new Blob([jsonData]).size;\n        if (dataSize > MAX_DATA_SIZE) {\n            throw new Error(`Rating data (${formatBytes(dataSize)}) exceeds maximum allowed size (${formatBytes(MAX_DATA_SIZE)})`); \n        }\n\n        // Create transaction\n        const transaction = await arweave.createTransaction({\n            data: jsonData\n        }, wallet);\n\n        // Add tags for searchability\n        transaction.addTag('Content-Type', 'application/json');\n        transaction.addTag('App-Name', 'RateAnybody');\n        transaction.addTag('Data-Type', 'rating');\n        transaction.addTag('Unix-Time', String(ratingData.timestamp));\n        transaction.addTag('First-Name', ratingData.firstName);\n        transaction.addTag('Middle-Name', ratingData.middleName);\n        transaction.addTag('Last-Name', ratingData.lastName);\n        transaction.addTag('Location', ratingData.location);\n        transaction.addTag('Associations', ratingData.associations);\n        transaction.addTag('Rating-Score', String(ratingData.score));\n\n        // Get transaction fee\n        const fee = arweave.ar.winstonToAr(transaction.reward);\n        console.log(`Transaction fee: ${fee} AR`);\n\n        // Check if we have enough balance\n        if (parseFloat(walletBalance) < parseFloat(fee)) {\n            throw new Error(`Insufficient wallet balance (${walletBalance} AR) for transaction fee (${fee} AR)`);\n        }\n\n        // Sign and post transaction\n        await arweave.transactions.sign(transaction, wallet);\n        const response = await arweave.transactions.post(transaction);\n\n        if (response.status === 200 || response.status === 202) {\n            uploadStatus.innerHTML = `\n                <div class=\"bg-green-50 border-l-4 border-green-500 p-4 rounded\">\n                    <div class=\"flex\">\n                        <div class=\"flex-shrink-0\">\n                            <svg class=\"h-5 w-5 text-green-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                            </svg>\n                        </div>\n                        <div class=\"ml-3\">\n                            <h3 class=\"text-sm font-medium text-green-800\">Rating Submitted Successfully!</h3>\n                            <div class=\"mt-2 text-sm text-green-700\">\n                                <p>Your rating has been permanently stored on the Arweave blockchain.</p>\n                                <p class=\"mt-2\">\n                                    <a href=\"https://arweave.net/${transaction.id}\" target=\"_blank\" class=\"font-medium text-green-700 underline\">\n                                        View Transaction: ${transaction.id.substring(0, 8)}...${transaction.id.substring(transaction.id.length - 8)}\n                                    </a>\n                                </p>\n                                <p class=\"mt-2 text-xs text-green-600\">Note: It may take a few minutes for your transaction to be mined.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `;\n\n            // Reset form\n            ratingForm.reset();\n            \n            // Update score display\n            if (scoreDisplay) {\n                scoreDisplay.textContent = \"5\"; // Reset to default\n                scoreDisplay.className = 'ml-3 bg-blue-100 text-blue-800 text-xl font-bold px-3 py-1 rounded-full min-w-[3rem] text-center';\n            }\n            \n            // Update wallet balance\n            walletBalance = (parseFloat(walletBalance) - parseFloat(fee)).toFixed(6);\n            updateWalletStatus();\n            \n        } else {\n            throw new Error(`Upload failed: ${response.statusText}`);\n        }\n    } catch (error) {\n        console.error('Error:', error);\n        showError(error.message);\n    } finally {\n        // Reset button\n        uploadButton.disabled = false;\n        uploadButton.innerHTML = `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\" />\n            </svg>\n            Upload Rating to Arweave\n        `;\n    }\n}\n\n// Helper function to show error messages\nfunction showError(message) {\n    uploadStatus.innerHTML = `\n        <div class=\"bg-red-50 border-l-4 border-red-500 p-4 rounded\">\n            <div class=\"flex\">\n                <div class=\"flex-shrink-0\">\n                    <svg class=\"h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                    </svg>\n                </div>\n                <div class=\"ml-3\">\n                    <h3 class=\"text-sm font-medium text-red-800\">Error</h3>\n                    <div class=\"mt-2 text-sm text-red-700\">\n                        <p>${message}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;\n}\n\n// Helper function to format bytes\nfunction formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n// Log script execution for debugging\nconsole.log('upload.js script executed at', new Date().toISOString());\n\n// Initialize and set up when DOM is ready with enhanced logging\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('DOMContentLoaded event fired at', new Date().toISOString());\n    \n    // Try to find slider elements directly for debugging\n    const directScoreInput = document.getElementById('score');\n    const directScoreDisplay = document.getElementById('scoreDisplay');\n    console.log('Direct element check:', {\n        scoreInput: directScoreInput,\n        scoreDisplay: directScoreDisplay\n    });\n    \n    // Initialize DOM elements\n    initDomElements();\n    \n    // Initialize Arweave connection\n    init().catch(error => {\n        console.error('Initialization error:', error);\n    });\n});\n\n// Fallback initialization - sometimes DOMContentLoaded doesn't fire if script is loaded late\nif (document.readyState === 'complete' || document.readyState === 'interactive') {\n    console.log('Document already ready, initializing immediately');\n    setTimeout(() => {\n        initDomElements();\n        init().catch(error => {\n            console.error('Delayed initialization error:', error);\n        });\n    }, 100);\n}\n"],"names":["walletConfig","getWallet","async","console","log","walletData","atob","wallet","JSON","parse","kty","n","e","d","error","Error","message","walletToBase64","walletJson","walletStr","stringify","btoa","getEnvironmentInfo","hasEnvVar","process","env","WALLET_ENV_VAR","envVarName","arweave","uploadButton","uploadStatus","ratingForm","scoreInput","scoreDisplay","walletAddress","walletBalance","init","window","Arweave","host","port","protocol","wallets","jwkToAddress","balance","getBalance","ar","winstonToAr","substring","loadWallet","updateWalletStatus","showError","initDomElements","allElements","document","querySelectorAll","length","getElementById","querySelector","textContent","value","style","backgroundColor","addEventListener","this","updateScoreDisplay","scoreInputExists","scoreDisplayExists","setTimeout","handleFormSubmit","score","parseInt","className","classList","add","walletStatusEl","createElement","innerHTML","body","appendChild","opacity","transition","remove","preventDefault","disabled","ratingData","firstName","trim","middleName","lastName","location","associations","comments","timestamp","Math","floor","Date","now","jsonData","dataSize","Blob","size","formatBytes","transaction","createTransaction","data","addTag","String","fee","reward","parseFloat","transactions","sign","response","post","status","statusText","id","reset","toFixed","bytes","decimals","dm","i","pow","toISOString","directScoreInput","directScoreDisplay","catch","readyState"],"sourceRoot":""}