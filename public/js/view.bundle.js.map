{"version":3,"file":"view.bundle.js","mappings":"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","sources":["webpack://arweavestuff/./node_modules/arweave/web/index.js","webpack://arweavestuff/./node_modules/arweave/web/wallets.js","webpack://arweavestuff/./node_modules/arweave/web/blocks.js","webpack://arweavestuff/./node_modules/arconnect/index.es.js","webpack://arweavestuff/./node_modules/arweave/web/lib/crypto/webcrypto-driver.js","webpack://arweavestuff/./node_modules/arweave/web/transactions.js","webpack://arweavestuff/./node_modules/ardb/lib/ardb.js","webpack://arweavestuff/./node_modules/arweave/web/lib/transaction-uploader.js","webpack://arweavestuff/./node_modules/arweave/web/lib/deepHash.js","webpack://arweavestuff/./node_modules/arweave/web/net-config.js","webpack://arweavestuff/./node_modules/base64-js/index.js","webpack://arweavestuff/./node_modules/ardb/lib/models/block.js","webpack://arweavestuff/./node_modules/arweave/web/ar.js","webpack://arweavestuff/./node_modules/bignumber.js/bignumber.js","webpack://arweavestuff/./node_modules/arweave/web/lib/merkle.js","webpack://arweavestuff/./node_modules/arweave/web/silo.js","webpack://arweavestuff/./node_modules/ardb/lib/models/transaction.js","webpack://arweavestuff/./node_modules/ardb/lib/utils/log.js","webpack://arweavestuff/./node_modules/arweave/web/network.js","webpack://arweavestuff/./node_modules/arweave/web/lib/transaction.js","webpack://arweavestuff/./node_modules/arweave/web/lib/utils.js","webpack://arweavestuff/./node_modules/arweave/web/chunks.js","webpack://arweavestuff/./node_modules/arweave/web/common.js","webpack://arweavestuff/./node_modules/arweave/web/lib/error.js","webpack://arweavestuff/./node_modules/arweave/web/lib/api.js","webpack://arweavestuff/webpack/bootstrap","webpack://arweavestuff/webpack/runtime/compat get default export","webpack://arweavestuff/webpack/runtime/define property getters","webpack://arweavestuff/webpack/runtime/hasOwnProperty shorthand","webpack://arweavestuff/webpack/runtime/make namespace object","webpack://arweavestuff/./src/js/view.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst common_1 = require(\"./common\");\nconst net_config_1 = require(\"./net-config\");\ncommon_1.default.init = function (apiConfig = {}) {\n    const defaults = {\n        host: \"arweave.net\",\n        port: 443,\n        protocol: \"https\",\n    };\n    if (typeof location !== \"object\" ||\n        !location.protocol ||\n        !location.hostname) {\n        return new common_1.default({\n            ...apiConfig,\n            ...defaults,\n        });\n    }\n    // window.location.protocol has a trailing colon (http:, https:, file: etc)\n    const locationProtocol = location.protocol.replace(\":\", \"\");\n    const locationHost = location.hostname;\n    const locationPort = location.port\n        ? parseInt(location.port)\n        : locationProtocol == \"https\"\n            ? 443\n            : 80;\n    const defaultConfig = (0, net_config_1.getDefaultConfig)(locationProtocol, locationHost);\n    const protocol = apiConfig.protocol || defaultConfig.protocol;\n    const host = apiConfig.host || defaultConfig.host;\n    const port = apiConfig.port || defaultConfig.port || locationPort;\n    return new common_1.default({\n        ...apiConfig,\n        host,\n        protocol,\n        port,\n    });\n};\nif (typeof globalThis === \"object\") {\n    globalThis.Arweave = common_1.default;\n}\nelse if (typeof self === \"object\") {\n    self.Arweave = common_1.default;\n}\n__exportStar(require(\"./common\"), exports);\nexports.default = common_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ArweaveUtils = require(\"./lib/utils\");\nrequire(\"arconnect\");\nclass Wallets {\n    api;\n    crypto;\n    constructor(api, crypto) {\n        this.api = api;\n        this.crypto = crypto;\n    }\n    /**\n     * Get the wallet balance for the given address.\n     *\n     * @param {string} address - The arweave address to get the balance for.\n     *\n     * @returns {Promise<string>} - Promise which resolves with a winston string balance.\n     */\n    getBalance(address) {\n        return this.api.get(`wallet/${address}/balance`).then((response) => {\n            return response.data;\n        });\n    }\n    /**\n     * Get the last transaction ID for the given wallet address.\n     *\n     * @param {string} address - The arweave address to get the transaction for.\n     *\n     * @returns {Promise<string>} - Promise which resolves with a transaction ID.\n     */\n    getLastTransactionID(address) {\n        return this.api.get(`wallet/${address}/last_tx`).then((response) => {\n            return response.data;\n        });\n    }\n    generate() {\n        return this.crypto.generateJWK();\n    }\n    async jwkToAddress(jwk) {\n        if (!jwk || jwk === \"use_wallet\") {\n            return this.getAddress();\n        }\n        else {\n            return this.getAddress(jwk);\n        }\n    }\n    async getAddress(jwk) {\n        if (!jwk || jwk === \"use_wallet\") {\n            try {\n                // @ts-ignore\n                await arweaveWallet.connect([\"ACCESS_ADDRESS\"]);\n            }\n            catch {\n                // Permission is already granted\n            }\n            // @ts-ignore\n            return arweaveWallet.getActiveAddress();\n        }\n        else {\n            return this.ownerToAddress(jwk.n);\n        }\n    }\n    async ownerToAddress(owner) {\n        return ArweaveUtils.bufferTob64Url(await this.crypto.hash(ArweaveUtils.b64UrlToBuffer(owner)));\n    }\n}\nexports.default = Wallets;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"./lib/error\");\nrequire(\"arconnect\");\nclass Blocks {\n    api;\n    network;\n    static HASH_ENDPOINT = \"block/hash/\";\n    static HEIGHT_ENDPOINT = \"block/height/\";\n    constructor(api, network) {\n        this.api = api;\n        this.network = network;\n    }\n    /**\n     * Gets a block by its \"indep_hash\"\n     */\n    async get(indepHash) {\n        const response = await this.api.get(`${Blocks.HASH_ENDPOINT}${indepHash}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new error_1.default(\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets a block by its \"height\"\n     */\n    async getByHeight(height) {\n        const response = await this.api.get(`${Blocks.HEIGHT_ENDPOINT}${height}`);\n        if (response.status === 200) {\n            return response.data;\n        }\n        else {\n            if (response.status === 404) {\n                throw new error_1.default(\"BLOCK_NOT_FOUND\" /* ArweaveErrorType.BLOCK_NOT_FOUND */);\n            }\n            else {\n                throw new Error(`Error while loading block data: ${response}`);\n            }\n        }\n    }\n    /**\n     * Gets current block data (ie. block with indep_hash = Network.getInfo().current)\n     */\n    async getCurrent() {\n        const { current } = await this.network.getInfo();\n        return await this.get(current);\n    }\n}\nexports.default = Blocks;\n","export default {};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ArweaveUtils = require(\"../utils\");\nclass WebCryptoDriver {\n    keyLength = 4096;\n    publicExponent = 0x10001;\n    hashAlgorithm = \"sha256\";\n    driver;\n    constructor() {\n        if (!this.detectWebCrypto()) {\n            throw new Error(\"SubtleCrypto not available!\");\n        }\n        this.driver = crypto.subtle;\n    }\n    async generateJWK() {\n        let cryptoKey = await this.driver.generateKey({\n            name: \"RSA-PSS\",\n            modulusLength: 4096,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n            hash: {\n                name: \"SHA-256\",\n            },\n        }, true, [\"sign\"]);\n        let jwk = await this.driver.exportKey(\"jwk\", cryptoKey.privateKey);\n        return {\n            kty: jwk.kty,\n            e: jwk.e,\n            n: jwk.n,\n            d: jwk.d,\n            p: jwk.p,\n            q: jwk.q,\n            dp: jwk.dp,\n            dq: jwk.dq,\n            qi: jwk.qi,\n        };\n    }\n    async sign(jwk, data, { saltLength } = {}) {\n        let signature = await this.driver.sign({\n            name: \"RSA-PSS\",\n            saltLength: saltLength ?? 32,\n        }, await this.jwkToCryptoKey(jwk), data);\n        return new Uint8Array(signature);\n    }\n    async hash(data, algorithm = \"SHA-256\") {\n        let digest = await this.driver.digest(algorithm, data);\n        return new Uint8Array(digest);\n    }\n    async verify(publicModulus, data, signature) {\n        const publicKey = {\n            kty: \"RSA\",\n            e: \"AQAB\",\n            n: publicModulus,\n        };\n        const key = await this.jwkToPublicCryptoKey(publicKey);\n        const digest = await this.driver.digest(\"SHA-256\", data);\n        const salt0 = await this.driver.verify({\n            name: \"RSA-PSS\",\n            saltLength: 0,\n        }, key, signature, data);\n        const salt32 = await this.driver.verify({\n            name: \"RSA-PSS\",\n            saltLength: 32,\n        }, key, signature, data);\n        // saltN's salt-length is derived from a formula described here\n        // https://developer.mozilla.org/en-US/docs/Web/API/RsaPssParams\n        const saltLengthN = Math.ceil((key.algorithm.modulusLength - 1) / 8) -\n            digest.byteLength -\n            2;\n        const saltN = await this.driver.verify({\n            name: \"RSA-PSS\",\n            saltLength: saltLengthN,\n        }, key, signature, data);\n        const result = salt0 || salt32 || saltN;\n        if (!result) {\n            const details = {\n                algorithm: key.algorithm.name,\n                modulusLength: key.algorithm.modulusLength,\n                keyUsages: key.usages,\n                saltLengthsAttempted: `0, 32, ${saltLengthN}`,\n            };\n            console.warn(\"Transaction Verification Failed! \\n\", `Details: ${JSON.stringify(details, null, 2)} \\n`, \"N.B. ArweaveJS is only guaranteed to verify txs created using ArweaveJS.\");\n        }\n        return result;\n    }\n    async jwkToCryptoKey(jwk) {\n        return this.driver.importKey(\"jwk\", jwk, {\n            name: \"RSA-PSS\",\n            hash: {\n                name: \"SHA-256\",\n            },\n        }, false, [\"sign\"]);\n    }\n    async jwkToPublicCryptoKey(publicJwk) {\n        return this.driver.importKey(\"jwk\", publicJwk, {\n            name: \"RSA-PSS\",\n            hash: {\n                name: \"SHA-256\",\n            },\n        }, false, [\"verify\"]);\n    }\n    detectWebCrypto() {\n        if (typeof crypto === \"undefined\") {\n            return false;\n        }\n        const subtle = crypto?.subtle;\n        if (subtle === undefined) {\n            return false;\n        }\n        const names = [\n            \"generateKey\",\n            \"importKey\",\n            \"exportKey\",\n            \"digest\",\n            \"sign\",\n        ];\n        return names.every((name) => typeof subtle[name] === \"function\");\n    }\n    async encrypt(data, key, salt) {\n        const initialKey = await this.driver.importKey(\"raw\", typeof key == \"string\" ? ArweaveUtils.stringToBuffer(key) : key, {\n            name: \"PBKDF2\",\n            length: 32,\n        }, false, [\"deriveKey\"]);\n        // const salt = ArweaveUtils.stringToBuffer(\"salt\");\n        // create a random string for deriving the key\n        // const salt = this.driver.randomBytes(16).toString('hex');\n        const derivedkey = await this.driver.deriveKey({\n            name: \"PBKDF2\",\n            salt: salt\n                ? ArweaveUtils.stringToBuffer(salt)\n                : ArweaveUtils.stringToBuffer(\"salt\"),\n            iterations: 100000,\n            hash: \"SHA-256\",\n        }, initialKey, {\n            name: \"AES-CBC\",\n            length: 256,\n        }, false, [\"encrypt\", \"decrypt\"]);\n        const iv = new Uint8Array(16);\n        crypto.getRandomValues(iv);\n        const encryptedData = await this.driver.encrypt({\n            name: \"AES-CBC\",\n            iv: iv,\n        }, derivedkey, data);\n        return ArweaveUtils.concatBuffers([iv, encryptedData]);\n    }\n    async decrypt(encrypted, key, salt) {\n        const initialKey = await this.driver.importKey(\"raw\", typeof key == \"string\" ? ArweaveUtils.stringToBuffer(key) : key, {\n            name: \"PBKDF2\",\n            length: 32,\n        }, false, [\"deriveKey\"]);\n        // const salt = ArweaveUtils.stringToBuffer(\"pepper\");\n        const derivedkey = await this.driver.deriveKey({\n            name: \"PBKDF2\",\n            salt: salt\n                ? ArweaveUtils.stringToBuffer(salt)\n                : ArweaveUtils.stringToBuffer(\"salt\"),\n            iterations: 100000,\n            hash: \"SHA-256\",\n        }, initialKey, {\n            name: \"AES-CBC\",\n            length: 256,\n        }, false, [\"encrypt\", \"decrypt\"]);\n        const iv = encrypted.slice(0, 16);\n        const data = await this.driver.decrypt({\n            name: \"AES-CBC\",\n            iv: iv,\n        }, derivedkey, encrypted.slice(16));\n        // We're just using concat to convert from an array buffer to uint8array\n        return ArweaveUtils.concatBuffers([data]);\n    }\n}\nexports.default = WebCryptoDriver;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"./lib/error\");\nconst transaction_1 = require(\"./lib/transaction\");\nconst ArweaveUtils = require(\"./lib/utils\");\nconst transaction_uploader_1 = require(\"./lib/transaction-uploader\");\nrequire(\"arconnect\");\nclass Transactions {\n    api;\n    crypto;\n    chunks;\n    constructor(api, crypto, chunks) {\n        this.api = api;\n        this.crypto = crypto;\n        this.chunks = chunks;\n    }\n    async getTransactionAnchor() {\n        const res = await this.api.get(`tx_anchor`);\n        if (!res.data.match(/^[a-z0-9_-]{43,}/i) || !res.ok) {\n            throw new Error(`Could not getTransactionAnchor. Received: ${res.data}. Status: ${res.status}, ${res.statusText}`);\n        }\n        return res.data;\n    }\n    async getPrice(byteSize, targetAddress) {\n        let endpoint = targetAddress\n            ? `price/${byteSize}/${targetAddress}`\n            : `price/${byteSize}`;\n        const res = await this.api.get(endpoint);\n        if (!/^\\d+$/.test(res.data) || !res.ok) {\n            throw new Error(`Could not getPrice. Received: ${res.data}. Status: ${res.status}, ${res.statusText}`);\n        }\n        return res.data;\n    }\n    async get(id) {\n        const response = await this.api.get(`tx/${id}`);\n        if (response.status == 200) {\n            const data_size = parseInt(response.data.data_size);\n            if (response.data.format >= 2 &&\n                data_size > 0 &&\n                data_size <= 1024 * 1024 * 12) {\n                const data = await this.getData(id);\n                return new transaction_1.default({\n                    ...response.data,\n                    data,\n                });\n            }\n            return new transaction_1.default({\n                ...response.data,\n                format: response.data.format || 1,\n            });\n        }\n        if (response.status == 404) {\n            throw new error_1.default(\"TX_NOT_FOUND\" /* ArweaveErrorType.TX_NOT_FOUND */);\n        }\n        if (response.status == 410) {\n            throw new error_1.default(\"TX_FAILED\" /* ArweaveErrorType.TX_FAILED */);\n        }\n        throw new error_1.default(\"TX_INVALID\" /* ArweaveErrorType.TX_INVALID */);\n    }\n    fromRaw(attributes) {\n        return new transaction_1.default(attributes);\n    }\n    /** @deprecated use GQL https://gql-guide.arweave.net */\n    async search(tagName, tagValue) {\n        return this.api\n            .post(`arql`, {\n            op: \"equals\",\n            expr1: tagName,\n            expr2: tagValue,\n        })\n            .then((response) => {\n            if (!response.data) {\n                return [];\n            }\n            return response.data;\n        });\n    }\n    getStatus(id) {\n        return this.api.get(`tx/${id}/status`).then((response) => {\n            if (response.status == 200) {\n                return {\n                    status: 200,\n                    confirmed: response.data,\n                };\n            }\n            return {\n                status: response.status,\n                confirmed: null,\n            };\n        });\n    }\n    async getData(id, options) {\n        let data = undefined;\n        try {\n            data = await this.chunks.downloadChunkedData(id);\n        }\n        catch (error) {\n            console.error(`Error while trying to download chunked data for ${id}`);\n            console.error(error);\n        }\n        if (!data) {\n            console.warn(`Falling back to gateway cache for ${id}`);\n            try {\n                const { data: resData, ok, status, statusText, } = await this.api.get(`/${id}`, { responseType: \"arraybuffer\" });\n                if (!ok) {\n                    throw new Error(`Bad http status code`, {\n                        cause: { status, statusText },\n                    });\n                }\n                data = resData;\n            }\n            catch (error) {\n                console.error(`Error while trying to download contiguous data from gateway cache for ${id}`);\n                console.error(error);\n            }\n        }\n        if (!data) {\n            throw new Error(`${id} data was not found!`);\n        }\n        if (options && options.decode && !options.string) {\n            return data;\n        }\n        if (options && options.decode && options.string) {\n            return ArweaveUtils.bufferToString(data);\n        }\n        // Since decode wasn't requested, caller expects b64url encoded data.\n        return ArweaveUtils.bufferTob64Url(data);\n    }\n    async sign(transaction, jwk, //\"use_wallet\" for backwards compatibility only\n    options) {\n        /** Non-exhaustive (only checks key names), but previously no jwk checking was done */\n        const isJwk = (obj) => {\n            let valid = true;\n            [\"n\", \"e\", \"d\", \"p\", \"q\", \"dp\", \"dq\", \"qi\"].map((key) => !(key in obj) && (valid = false));\n            return valid;\n        };\n        const validJwk = typeof jwk === \"object\" && isJwk(jwk);\n        const externalWallet = typeof arweaveWallet === \"object\";\n        if (!validJwk && !externalWallet) {\n            throw new Error(`No valid JWK or external wallet found to sign transaction.`);\n        }\n        else if (validJwk) {\n            transaction.setOwner(jwk.n);\n            let dataToSign = await transaction.getSignatureData();\n            let rawSignature = await this.crypto.sign(jwk, dataToSign, options);\n            let id = await this.crypto.hash(rawSignature);\n            transaction.setSignature({\n                id: ArweaveUtils.bufferTob64Url(id),\n                owner: jwk.n,\n                signature: ArweaveUtils.bufferTob64Url(rawSignature),\n            });\n        }\n        else if (externalWallet) {\n            try {\n                const existingPermissions = await arweaveWallet.getPermissions();\n                if (!existingPermissions.includes(\"SIGN_TRANSACTION\"))\n                    await arweaveWallet.connect([\"SIGN_TRANSACTION\"]);\n            }\n            catch {\n                // Permission is already granted\n            }\n            const signedTransaction = await arweaveWallet.sign(transaction, options);\n            transaction.setSignature({\n                id: signedTransaction.id,\n                owner: signedTransaction.owner,\n                reward: signedTransaction.reward,\n                tags: signedTransaction.tags,\n                signature: signedTransaction.signature,\n            });\n        }\n        else {\n            //can't get here, but for sanity we'll throw an error.\n            throw new Error(`An error occurred while signing. Check wallet is valid`);\n        }\n    }\n    async verify(transaction) {\n        const signaturePayload = await transaction.getSignatureData();\n        /**\n         * The transaction ID should be a SHA-256 hash of the raw signature bytes, so this needs\n         * to be recalculated from the signature and checked against the transaction ID.\n         */\n        const rawSignature = transaction.get(\"signature\", {\n            decode: true,\n            string: false,\n        });\n        const expectedId = ArweaveUtils.bufferTob64Url(await this.crypto.hash(rawSignature));\n        if (transaction.id !== expectedId) {\n            throw new Error(`Invalid transaction signature or ID! The transaction ID doesn't match the expected SHA-256 hash of the signature.`);\n        }\n        /**\n         * Now verify the signature is valid and signed by the owner wallet (owner field = originating wallet public key).\n         */\n        return this.crypto.verify(transaction.owner, signaturePayload, rawSignature);\n    }\n    async post(transaction) {\n        if (typeof transaction === \"string\") {\n            transaction = new transaction_1.default(JSON.parse(transaction));\n        }\n        else if (typeof transaction.readInt32BE === \"function\") {\n            transaction = new transaction_1.default(JSON.parse(transaction.toString()));\n        }\n        else if (typeof transaction === \"object\" &&\n            !(transaction instanceof transaction_1.default)) {\n            transaction = new transaction_1.default(transaction);\n        }\n        if (!(transaction instanceof transaction_1.default)) {\n            throw new Error(`Must be Transaction object`);\n        }\n        if (!transaction.chunks) {\n            await transaction.prepareChunks(transaction.data);\n        }\n        const uploader = await this.getUploader(transaction, transaction.data);\n        // Emulate existing error & return value behavior.\n        try {\n            while (!uploader.isComplete) {\n                await uploader.uploadChunk();\n            }\n        }\n        catch (e) {\n            if (uploader.lastResponseStatus > 0) {\n                return {\n                    status: uploader.lastResponseStatus,\n                    statusText: uploader.lastResponseError,\n                    data: {\n                        error: uploader.lastResponseError,\n                    },\n                };\n            }\n            throw e;\n        }\n        return {\n            status: 200,\n            statusText: \"OK\",\n            data: {},\n        };\n    }\n    /**\n     * Gets an uploader than can be used to upload a transaction chunk by chunk, giving progress\n     * and the ability to resume.\n     *\n     * Usage example:\n     *\n     * ```\n     * const uploader = arweave.transactions.getUploader(transaction);\n     * while (!uploader.isComplete) {\n     *   await uploader.uploadChunk();\n     *   console.log(`${uploader.pctComplete}%`);\n     * }\n     * ```\n     *\n     * @param upload a Transaction object, a previously save progress object, or a transaction id.\n     * @param data the data of the transaction. Required when resuming an upload.\n     */\n    async getUploader(upload, data) {\n        let uploader;\n        if (data instanceof ArrayBuffer) {\n            data = new Uint8Array(data);\n        }\n        if (upload instanceof transaction_1.default) {\n            if (!data) {\n                data = upload.data;\n            }\n            if (!(data instanceof Uint8Array)) {\n                throw new Error(\"Data format is invalid\");\n            }\n            if (!upload.chunks) {\n                await upload.prepareChunks(data);\n            }\n            uploader = new transaction_uploader_1.TransactionUploader(this.api, upload);\n            if (!uploader.data || uploader.data.length === 0) {\n                uploader.data = data;\n            }\n        }\n        else {\n            if (typeof upload === \"string\") {\n                upload = await transaction_uploader_1.TransactionUploader.fromTransactionId(this.api, upload);\n            }\n            if (!data || !(data instanceof Uint8Array)) {\n                throw new Error(`Must provide data when resuming upload`);\n            }\n            // upload should be a serialized upload.\n            uploader = await transaction_uploader_1.TransactionUploader.fromSerialized(this.api, upload, data);\n        }\n        return uploader;\n    }\n    /**\n     * Async generator version of uploader\n     *\n     * Usage example:\n     *\n     * ```\n     * for await (const uploader of arweave.transactions.upload(tx)) {\n     *  console.log(`${uploader.pctComplete}%`);\n     * }\n     * ```\n     *\n     * @param upload a Transaction object, a previously save uploader, or a transaction id.\n     * @param data the data of the transaction. Required when resuming an upload.\n     */\n    async *upload(upload, data) {\n        const uploader = await this.getUploader(upload, data);\n        while (!uploader.isComplete) {\n            await uploader.uploadChunk();\n            yield uploader;\n        }\n        return uploader;\n    }\n}\nexports.default = Transactions;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst block_1 = __importDefault(require(\"./models/block\"));\nconst transaction_1 = __importDefault(require(\"./models/transaction\"));\nconst log_1 = require(\"./utils/log\");\n/**\n * Arweave as a database.\n * To easily interact with Arweave's graphql endpoint.\n */\nclass ArDB {\n    /**\n     *\n     * @param arweave An arweave instance\n     * @param logLevel Show logs. 0 = false, 1 = true, 2 = if arweave instance has log enabled.\n     */\n    constructor(arweave, logLevel = log_1.LOGS.ARWEAVE) {\n        this.reqType = 'transactions';\n        this.options = {};\n        this.after = '';\n        this.afterRegex = /after: *\"([^\"]*)\"/gi;\n        this.emptyLinesRegex = /^\\s*[\\r\\n]/gm;\n        this.fields = [\n            'id',\n            'anchor',\n            'signature',\n            'recipient',\n            'owner',\n            'owner.address',\n            'owner.key',\n            'fee',\n            'fee.winston',\n            'fee.ar',\n            'quantity',\n            'quantity.winston',\n            'quantity.ar',\n            'data',\n            'data.size',\n            'data.type',\n            'tags',\n            'tags.name',\n            'tags.value',\n            'block',\n            'block.id',\n            'block.timestamp',\n            'block.height',\n            'block.previous',\n            'parent',\n            'parent.id',\n        ];\n        this.includes = new Set();\n        this.arweave = arweave;\n        log_1.log.init(logLevel, arweave);\n        this.includes = new Set(this.fields);\n    }\n    /**\n     * Get the current cursor (also known as `after`) in case you need to do extra manual work with it.\n     * @returns cursor\n     */\n    getCursor() {\n        return this.after;\n    }\n    /**\n     * Search is the first function called before doing a find.\n     * @param type What type of search are we going to do.\n     * @returns ardb\n     */\n    search(type = 'transactions') {\n        this.reqType = type;\n        this.options = {};\n        this.after = '';\n        return this;\n    }\n    /**\n     * Get transactions or blocks by transaction ID.\n     * @param id The transaction/block ID.\n     * @returns ardb\n     */\n    id(id) {\n        this.checkSearchType();\n        this.options.id = id;\n        this.options.ids = [id];\n        return this;\n    }\n    /**\n     * Get transactions or blocks by transaction IDs.\n     * @param ids A list of transactions/blocks IDs.\n     * @returns ardb\n     */\n    ids(ids) {\n        this.checkSearchType();\n        this.options.ids = ids;\n        this.options.id = ids[0];\n        return this;\n    }\n    /**\n     * Get transaction(s) per tag App-Name = name.\n     * @param name The App-Name value as string.\n     * @returns ardb\n     */\n    appName(name) {\n        this.checkSearchType();\n        this.tag('App-Name', [name]);\n        return this;\n    }\n    /**\n     * Get transaction(s) with the tag Content-Type = type.\n     * @param type Content-Type as string.\n     * @returns ardb\n     */\n    type(type) {\n        this.checkSearchType();\n        this.tag('Content-Type', [type]);\n        return this;\n    }\n    /**\n     * Get transaction(s) by a list of tags\n     * @param tags Array of objects with name (string) and values (array|string)\n     * @returns ardb\n     */\n    tags(tags) {\n        this.checkSearchType();\n        const ts = [];\n        for (const tag of tags) {\n            const values = typeof tag.values === 'string' ? [tag.values] : tag.values;\n            ts.push({\n                name: tag.name,\n                values,\n            });\n        }\n        const $oTags = this.options.tags && this.options.tags.length ? this.options.tags : [];\n        this.options.tags = [...ts, ...$oTags];\n        return this;\n    }\n    /**\n     * Get transaction(s) by this specific tag, if previous ones exists it will be added to the list of tags.\n     * @param name The tag name, ex: App-Name.\n     * @param values The tag value or an array of values.\n     * @returns ardb\n     */\n    tag(name, values) {\n        this.checkSearchType();\n        if (!this.options.tags) {\n            this.options.tags = [];\n        }\n        if (typeof values === 'string') {\n            values = [values];\n        }\n        this.options.tags.push({ name, values });\n        return this;\n    }\n    /**\n     * Get transaction(s) by owner(s).\n     * @param owners Owner address or a list of owners.\n     * @returns ardb\n     */\n    from(owners) {\n        this.checkSearchType();\n        if (typeof owners === 'string') {\n            owners = [owners];\n        }\n        this.options.owners = owners;\n        return this;\n    }\n    /**\n     * Get transaction(s) by recipient(s).\n     * @param recipients A recipient address or a list of recipients.\n     * @returns ardb\n     */\n    to(recipients) {\n        this.checkSearchType();\n        if (typeof recipients === 'string') {\n            recipients = [recipients];\n        }\n        this.options.recipients = recipients;\n        return this;\n    }\n    /**\n     * Get blocks with the min height.\n     * @param min The minimum height for the search.\n     * @returns ardb\n     */\n    min(min) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.min = min;\n        return this;\n    }\n    /**\n     * Get blocks by a max height.\n     * @param max The maximum height for the search.\n     * @returns ardb\n     */\n    max(max) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.max = max;\n        return this;\n    }\n    /**\n     * Limits the returned results, this only works with `find()`, `findOne()` will always have a limit of 1, and `findAll()` has no limit.\n     * @param limit A number between 1 and 100.\n     * @returns ardb\n     */\n    limit(limit) {\n        this.checkSearchType();\n        if (limit < 1) {\n            console.warn('Limit cannot be less than 1, setting it to 1.');\n            limit = 1;\n        }\n        else if (limit > 100) {\n            console.warn(\"Arweave GQL won't return more than 100 entries at once.\");\n        }\n        this.options.first = limit;\n        return this;\n    }\n    /**\n     * Sort blocks or transactions by DESC or ASC.\n     * @param sort HEIGHT_DESC or HEIGHT_ASC.\n     * @returns ardb\n     */\n    sort(sort) {\n        this.options.sort = sort;\n        return this;\n    }\n    /**\n     * Set a cursor for when to get started.\n     * @param after The cursor string.\n     * @returns ardb\n     */\n    cursor(after) {\n        this.checkSearchType();\n        this.options.after = after;\n        return this;\n    }\n    /**\n     * Returns only the specified fields for block(s) or transaction(s).\n     * @param fields The field or list of fields to return.\n     * @returns ardb\n     */\n    only(fields) {\n        // Empty the included fields.\n        this.includes = new Set();\n        if (typeof fields === 'string' && this.fields.indexOf(fields) !== -1) {\n            this.includes.add(fields);\n            this.validateIncludes();\n            return this;\n        }\n        const toInclude = [];\n        for (const field of fields) {\n            // @ts-ignore\n            if (this.fields.indexOf(field) !== -1) {\n                // @ts-ignore\n                toInclude.push(field);\n            }\n        }\n        if (toInclude.length) {\n            this.includes = new Set(toInclude);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    /**\n     * Exclude fields from the returned results.\n     * @param fields A field or list of fields to exclude.\n     * @returns ardb\n     */\n    exclude(fields) {\n        // To make only() and exclude() work the same, re-add all fields to includes.\n        this.includes = new Set(this.fields);\n        if (typeof fields === 'string') {\n            this.includes.delete(fields);\n            this.validateIncludes();\n            return this;\n        }\n        for (const field of fields) {\n            this.includes.delete(field);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    // Ready to run\n    /**\n     * Find a list of blocks or transactions based on the specified search filters.\n     * @param filters Optional. You can manually add the filters here instead of using our search methods.\n     * @returns A list of transactions or blocks.\n     */\n    find(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            if (!this.options.first) {\n                this.options.first = 10;\n            }\n            const query = this.construct();\n            return this.run(query);\n        });\n    }\n    /**\n     * Find a single\n     * @param filters\n     * @returns\n     */\n    findOne(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 1;\n            const query = this.construct();\n            const txs = yield this.run(query);\n            return txs.length ? txs[0] : null;\n        });\n    }\n    findAll(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 100;\n            const query = this.construct();\n            return this.runAll(query);\n        });\n    }\n    /**\n     * To run with the cursor\n     */\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.after || !this.after.length) {\n                log_1.log.show('next(): Nothing more to search.');\n                return;\n            }\n            const query = this.construct().replace(this.afterRegex, `after: \"${this.after}\"`);\n            const result = yield this.run(query);\n            return this.options.first === 1 ? (result.length ? result[0] : null) : result;\n        });\n    }\n    run(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log_1.log.show('Running query:');\n            log_1.log.show(query);\n            const res = yield this.get(query);\n            if (!res)\n                return [];\n            if (res.transaction) {\n                return [new transaction_1.default(res.transaction, this.arweave)];\n            }\n            else if (res.block) {\n                return [new block_1.default(res.block)];\n            }\n            else if (res.transactions) {\n                const edges = res.transactions.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges.map((edge) => new transaction_1.default(edge.node, this.arweave));\n            }\n            else if (res.blocks) {\n                const edges = res.blocks.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges.map((edge) => new block_1.default(edge.node));\n            }\n        });\n    }\n    runAll(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let hasNextPage = true;\n            let edges = [];\n            let cursor = this.options.after || '';\n            let isTx = true;\n            while (hasNextPage) {\n                log_1.log.show('Running query:');\n                log_1.log.show(query);\n                const res = yield this.get(query);\n                if (!res) {\n                    return [];\n                }\n                if (res.transaction) {\n                    return [new transaction_1.default(res.transaction, this.arweave)];\n                }\n                else if (res.block) {\n                    return [new block_1.default(res.block)];\n                }\n                else if (res.transactions) {\n                    const r = res.transactions;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n                else if (res.blocks) {\n                    isTx = false;\n                    const r = res.blocks;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n            }\n            if (isTx) {\n                return edges.map((edge) => new transaction_1.default(edge.node, this.arweave));\n            }\n            else {\n                return edges.map((edge) => new block_1.default(edge.node));\n            }\n        });\n    }\n    /** Helpers */\n    checkSearchType() {\n        if (!this.reqType ||\n            (this.reqType !== 'transaction' &&\n                this.reqType !== 'block' &&\n                this.reqType !== 'transactions' &&\n                this.reqType !== 'blocks')) {\n            throw new Error('Invalid search type. Must provide one and it must be either \"transaction\", \"transactions\", \"block\" or \"blocks\"');\n        }\n    }\n    get(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.arweave.api.post('graphql', { query }, { headers: { 'content-type': 'application/json' } });\n            log_1.log.show('Returned result: ');\n            log_1.log.show(res.data.data);\n            return res.data.data;\n        });\n    }\n    construct() {\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            delete this.options.id;\n            if (this.reqType === 'transactions') {\n                delete this.options.height;\n            }\n            else {\n                delete this.options.owners;\n                delete this.options.recipients;\n                delete this.options.tags;\n                delete this.options.block;\n            }\n            if (!this.options.after) {\n                this.options.after = '';\n            }\n        }\n        else {\n            this.options = { id: this.options.id };\n        }\n        let params = JSON.stringify(this.options, null, 2)\n            .replace(/\"([^\"]+)\":/gm, '$1: ')\n            .replace('\"HEIGHT_DESC\"', 'HEIGHT_DESC')\n            .replace('\"HEIGHT_ASC\"', 'HEIGHT_ASC');\n        params = params.substring(1, params.length - 1);\n        let fields = '';\n        if (this.reqType === 'transaction' || this.reqType === 'transactions') {\n            let owner = '';\n            if (this.includes.has('owner')) {\n                owner = `owner {\n          ${this.includes.has('owner.address') ? 'address' : ''}\n          ${this.includes.has('owner.key') ? 'key' : ''}\n        }`;\n            }\n            let fee = '';\n            if (this.includes.has('fee')) {\n                fee = `fee {\n          ${this.includes.has('fee.winston') ? 'winston' : ''}\n          ${this.includes.has('fee.ar') ? 'ar' : ''}\n        }`;\n            }\n            let quantity = '';\n            if (this.includes.has('quantity')) {\n                quantity = `quantity {\n          ${this.includes.has('quantity.winston') ? 'winston' : ''}\n          ${this.includes.has('quantity.ar') ? 'ar' : ''}\n        }`;\n            }\n            let data = '';\n            if (this.includes.has('data')) {\n                data = `data {\n          ${this.includes.has('data.size') ? 'size' : ''}\n          ${this.includes.has('data.type') ? 'type' : ''}\n        }`;\n            }\n            let tags = '';\n            if (this.includes.has('tags')) {\n                tags = `tags {\n          ${this.includes.has('tags.name') ? 'name' : ''}\n          ${this.includes.has('tags.value') ? 'value' : ''}\n        }`;\n            }\n            let block = '';\n            if (this.includes.has('block')) {\n                block = `block {\n          ${this.includes.has('block.id') ? 'id' : ''}\n          ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n          ${this.includes.has('block.height') ? 'height' : ''}\n          ${this.includes.has('block.previous') ? 'previous' : ''}\n        }`;\n            }\n            let parent = '';\n            if (this.includes.has('parent') || this.includes.has('parent.id')) {\n                // Parent only has an ID, so if one of them is included, add both.\n                parent = `parent {\n          id\n        }`;\n            }\n            fields = `\n      ${this.includes.has('id') ? 'id' : ''}\n      ${this.includes.has('anchor') ? 'anchor' : ''}\n      ${this.includes.has('signature') ? 'signature' : ''}\n      ${this.includes.has('recipient') ? 'recipient' : ''}\n      ${owner}\n      ${fee}\n      ${quantity}\n      ${data}\n      ${tags}\n      ${block}\n      ${parent}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        anchor\n        signature\n        recipient\n        owner {\n          address\n          key\n        }\n        fee {\n          winston\n          ar\n        }\n        quantity {\n          winston\n          ar\n        }\n        data {\n          size\n          type\n        }\n        tags {\n          name\n          value\n        }\n        block {\n          id\n          timestamp\n          height\n          previous\n        }\n        parent {\n          id\n        }`;\n            }\n        }\n        else {\n            fields = `\n      ${this.includes.has('block.id') ? 'id' : ''}\n      ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n      ${this.includes.has('block.height') ? 'height' : ''}\n      ${this.includes.has('block.previous') ? 'previous' : ''}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        timestamp\n        height\n        previous`;\n            }\n        }\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            fields = `\n      pageInfo {\n        hasNextPage\n      }\n      edges { \n        cursor\n        node { \n          ${fields}\n        } \n      }`;\n        }\n        if (!this.reqType || !params) {\n            throw new Error('Invalid options. You need to first set your options!');\n        }\n        return `query {\n      ${this.reqType}(\n        ${params}\n      ){\n        ${fields}\n      }\n    }`.replace(/(\\r\\n|\\n|\\r)/gm, '');\n    }\n    validateIncludes() {\n        // Add all children if all of them are missing but a parent is present.\n        if (this.includes.has('owner') && !this.includes.has('owner.address') && !this.includes.has('owner.key')) {\n            this.includes.add('owner.address');\n            this.includes.add('owner.key');\n        }\n        if (this.includes.has('fee') && !this.includes.has('fee.winston') && !this.includes.has('fee.ar')) {\n            this.includes.add('fee.winston');\n            this.includes.add('fee.ar');\n        }\n        if (this.includes.has('quantity') && !this.includes.has('quantity.winston') && !this.includes.has('quantity.ar')) {\n            this.includes.add('quantity.winston');\n            this.includes.add('quantity.ar');\n        }\n        if (this.includes.has('data') && !this.includes.has('data.size') && !this.includes.has('data.type')) {\n            this.includes.add('data.size');\n            this.includes.add('data.type');\n        }\n        if (this.includes.has('tags') && !this.includes.has('tags.name') && !this.includes.has('tags.value')) {\n            this.includes.add('tags.name');\n            this.includes.add('tags.value');\n        }\n        if (this.includes.has('block') &&\n            !this.includes.has('block.timestamp') &&\n            !this.includes.has('block.height') &&\n            !this.includes.has('block.previous')) {\n            this.includes.add('block.id');\n            this.includes.add('block.timestamp');\n            this.includes.add('block.height');\n            this.includes.add('block.previous');\n        }\n        // Add a parent if one of the children is present but the parent is not\n        if (!this.includes.has('owner') && (this.includes.has('owner.address') || this.includes.has('owner.key'))) {\n            this.includes.add('owner');\n        }\n        if (!this.includes.has('fee') && (this.includes.has('fee.winston') || this.includes.has('fee.ar'))) {\n            this.includes.add('fee');\n        }\n        if (!this.includes.has('quantity') && (this.includes.has('quantity.winston') || this.includes.has('quantity.ar'))) {\n            this.includes.add('quantity');\n        }\n        if (!this.includes.has('data') && (this.includes.has('data.size') || this.includes.has('data.type'))) {\n            this.includes.add('data');\n        }\n        if (!this.includes.has('tags') && (this.includes.has('tags.name') || this.includes.has('tags.value'))) {\n            this.includes.add('tags');\n        }\n        if (!this.includes.has('block') &&\n            (this.includes.has('block.timestamp') || this.includes.has('block.height') || this.includes.has('block.previous'))) {\n            this.includes.add('block');\n        }\n    }\n}\nexports.default = ArDB;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionUploader = void 0;\nconst transaction_1 = require(\"./transaction\");\nconst ArweaveUtils = require(\"./utils\");\nconst error_1 = require(\"./error\");\nconst merkle_1 = require(\"./merkle\");\n// Maximum amount of chunks we will upload in the body.\nconst MAX_CHUNKS_IN_BODY = 1;\n// We assume these errors are intermitment and we can try again after a delay:\n// - not_joined\n// - timeout\n// - data_root_not_found (we may have hit a node that just hasn't seen it yet)\n// - exceeds_disk_pool_size_limit\n// We also try again after any kind of unexpected network errors\n// Errors from /chunk we should never try and continue on.\nconst FATAL_CHUNK_UPLOAD_ERRORS = [\n    \"invalid_json\",\n    \"chunk_too_big\",\n    \"data_path_too_big\",\n    \"offset_too_big\",\n    \"data_size_too_big\",\n    \"chunk_proof_ratio_not_attractive\",\n    \"invalid_proof\",\n];\n// Amount we will delay on receiving an error response but do want to continue.\nconst ERROR_DELAY = 1000 * 40;\nclass TransactionUploader {\n    api;\n    chunkIndex = 0;\n    txPosted = false;\n    transaction;\n    lastRequestTimeEnd = 0;\n    totalErrors = 0; // Not serialized.\n    data;\n    lastResponseStatus = 0;\n    lastResponseError = \"\";\n    get isComplete() {\n        return (this.txPosted &&\n            this.chunkIndex === this.transaction.chunks.chunks.length);\n    }\n    get totalChunks() {\n        return this.transaction.chunks.chunks.length;\n    }\n    get uploadedChunks() {\n        return this.chunkIndex;\n    }\n    get pctComplete() {\n        return Math.trunc((this.uploadedChunks / this.totalChunks) * 100);\n    }\n    constructor(api, transaction) {\n        this.api = api;\n        if (!transaction.id) {\n            throw new Error(`Transaction is not signed`);\n        }\n        if (!transaction.chunks) {\n            throw new Error(`Transaction chunks not prepared`);\n        }\n        // Make a copy of transaction, zeroing the data so we can serialize.\n        this.data = transaction.data;\n        this.transaction = new transaction_1.default(Object.assign({}, transaction, { data: new Uint8Array(0) }));\n    }\n    /**\n     * Uploads the next part of the transaction.\n     * On the first call this posts the transaction\n     * itself and on any subsequent calls uploads the\n     * next chunk until it completes.\n     */\n    async uploadChunk(chunkIndex_) {\n        if (this.isComplete) {\n            throw new Error(`Upload is already complete`);\n        }\n        if (this.lastResponseError !== \"\") {\n            this.totalErrors++;\n        }\n        else {\n            this.totalErrors = 0;\n        }\n        // We have been trying for about an hour receiving an\n        // error every time, so eventually bail.\n        if (this.totalErrors === 100) {\n            throw new Error(`Unable to complete upload: ${this.lastResponseStatus}: ${this.lastResponseError}`);\n        }\n        let delay = this.lastResponseError === \"\"\n            ? 0\n            : Math.max(this.lastRequestTimeEnd + ERROR_DELAY - Date.now(), ERROR_DELAY);\n        if (delay > 0) {\n            // Jitter delay bcoz networks, subtract up to 30% from 40 seconds\n            delay = delay - delay * Math.random() * 0.3;\n            await new Promise((res) => setTimeout(res, delay));\n        }\n        this.lastResponseError = \"\";\n        if (!this.txPosted) {\n            await this.postTransaction();\n            return;\n        }\n        if (chunkIndex_) {\n            this.chunkIndex = chunkIndex_;\n        }\n        const chunk = this.transaction.getChunk(chunkIndex_ || this.chunkIndex, this.data);\n        const chunkOk = await (0, merkle_1.validatePath)(this.transaction.chunks.data_root, parseInt(chunk.offset), 0, parseInt(chunk.data_size), ArweaveUtils.b64UrlToBuffer(chunk.data_path));\n        if (!chunkOk) {\n            throw new Error(`Unable to validate chunk ${this.chunkIndex}`);\n        }\n        // Catch network errors and turn them into objects with status -1 and an error message.\n        const resp = await this.api\n            .post(`chunk`, this.transaction.getChunk(this.chunkIndex, this.data))\n            .catch((e) => {\n            console.error(e.message);\n            return { status: -1, data: { error: e.message } };\n        });\n        this.lastRequestTimeEnd = Date.now();\n        this.lastResponseStatus = resp.status;\n        if (this.lastResponseStatus == 200) {\n            this.chunkIndex++;\n        }\n        else {\n            this.lastResponseError = (0, error_1.getError)(resp);\n            if (FATAL_CHUNK_UPLOAD_ERRORS.includes(this.lastResponseError)) {\n                throw new Error(`Fatal error uploading chunk ${this.chunkIndex}: ${this.lastResponseError}`);\n            }\n        }\n    }\n    /**\n     * Reconstructs an upload from its serialized state and data.\n     * Checks if data matches the expected data_root.\n     *\n     * @param serialized\n     * @param data\n     */\n    static async fromSerialized(api, serialized, data) {\n        if (!serialized ||\n            typeof serialized.chunkIndex !== \"number\" ||\n            typeof serialized.transaction !== \"object\") {\n            throw new Error(`Serialized object does not match expected format.`);\n        }\n        // Everything looks ok, reconstruct the TransactionUpload,\n        // prepare the chunks again and verify the data_root matches\n        var transaction = new transaction_1.default(serialized.transaction);\n        if (!transaction.chunks) {\n            await transaction.prepareChunks(data);\n        }\n        const upload = new TransactionUploader(api, transaction);\n        // Copy the serialized upload information, and data passed in.\n        upload.chunkIndex = serialized.chunkIndex;\n        upload.lastRequestTimeEnd = serialized.lastRequestTimeEnd;\n        upload.lastResponseError = serialized.lastResponseError;\n        upload.lastResponseStatus = serialized.lastResponseStatus;\n        upload.txPosted = serialized.txPosted;\n        upload.data = data;\n        if (upload.transaction.data_root !== serialized.transaction.data_root) {\n            throw new Error(`Data mismatch: Uploader doesn't match provided data.`);\n        }\n        return upload;\n    }\n    /**\n     * Reconstruct an upload from the tx metadata, ie /tx/<id>.\n     *\n     * @param api\n     * @param id\n     * @param data\n     */\n    static async fromTransactionId(api, id) {\n        const resp = await api.get(`tx/${id}`);\n        if (resp.status !== 200) {\n            throw new Error(`Tx ${id} not found: ${resp.status}`);\n        }\n        const transaction = resp.data;\n        transaction.data = new Uint8Array(0);\n        const serialized = {\n            txPosted: true,\n            chunkIndex: 0,\n            lastResponseError: \"\",\n            lastRequestTimeEnd: 0,\n            lastResponseStatus: 0,\n            transaction,\n        };\n        return serialized;\n    }\n    toJSON() {\n        return {\n            chunkIndex: this.chunkIndex,\n            transaction: this.transaction,\n            lastRequestTimeEnd: this.lastRequestTimeEnd,\n            lastResponseStatus: this.lastResponseStatus,\n            lastResponseError: this.lastResponseError,\n            txPosted: this.txPosted,\n        };\n    }\n    // POST to /tx\n    async postTransaction() {\n        const uploadInBody = this.totalChunks <= MAX_CHUNKS_IN_BODY;\n        if (uploadInBody) {\n            // Post the transaction with data.\n            this.transaction.data = this.data;\n            const resp = await this.api.post(`tx`, this.transaction).catch((e) => {\n                console.error(e);\n                return { status: -1, data: { error: e.message } };\n            });\n            this.lastRequestTimeEnd = Date.now();\n            this.lastResponseStatus = resp.status;\n            this.transaction.data = new Uint8Array(0);\n            if (resp.status >= 200 && resp.status < 300) {\n                // We are complete.\n                this.txPosted = true;\n                this.chunkIndex = MAX_CHUNKS_IN_BODY;\n                return;\n            }\n            this.lastResponseError = (0, error_1.getError)(resp);\n            throw new Error(`Unable to upload transaction: ${resp.status}, ${this.lastResponseError}`);\n        }\n        // Post the transaction with no data.\n        const resp = await this.api.post(`tx`, this.transaction);\n        this.lastRequestTimeEnd = Date.now();\n        this.lastResponseStatus = resp.status;\n        if (!(resp.status >= 200 && resp.status < 300)) {\n            this.lastResponseError = (0, error_1.getError)(resp);\n            throw new Error(`Unable to upload transaction: ${resp.status}, ${this.lastResponseError}`);\n        }\n        this.txPosted = true;\n    }\n}\nexports.TransactionUploader = TransactionUploader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = deepHash;\nconst common_1 = require(\"../common\");\nasync function deepHash(data) {\n    if (Array.isArray(data)) {\n        const tag = common_1.default.utils.concatBuffers([\n            common_1.default.utils.stringToBuffer(\"list\"),\n            common_1.default.utils.stringToBuffer(data.length.toString()),\n        ]);\n        return await deepHashChunks(data, await common_1.default.crypto.hash(tag, \"SHA-384\"));\n    }\n    const tag = common_1.default.utils.concatBuffers([\n        common_1.default.utils.stringToBuffer(\"blob\"),\n        common_1.default.utils.stringToBuffer(data.byteLength.toString()),\n    ]);\n    const taggedHash = common_1.default.utils.concatBuffers([\n        await common_1.default.crypto.hash(tag, \"SHA-384\"),\n        await common_1.default.crypto.hash(data, \"SHA-384\"),\n    ]);\n    return await common_1.default.crypto.hash(taggedHash, \"SHA-384\");\n}\nasync function deepHashChunks(chunks, acc) {\n    if (chunks.length < 1) {\n        return acc;\n    }\n    const hashPair = common_1.default.utils.concatBuffers([\n        acc,\n        await deepHash(chunks[0]),\n    ]);\n    const newAcc = await common_1.default.crypto.hash(hashPair, \"SHA-384\");\n    return await deepHashChunks(chunks.slice(1), newAcc);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultConfig = void 0;\n/** exhaustive localhost testing */\nconst isLocal = (protocol, hostname) => {\n    const regexLocalIp = /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/;\n    const split = hostname.split(\".\");\n    const tld = split[split.length - 1]; // check if subdomain on the localhost\n    const localStrings = [\"localhost\", \"[::1]\"];\n    return (localStrings.includes(hostname) ||\n        protocol == \"file\" ||\n        localStrings.includes(tld) ||\n        !!hostname.match(regexLocalIp) ||\n        !!tld.match(regexLocalIp));\n};\n/** simplified tests for ip addresses */\nconst isIpAdress = (host) => {\n    // an IPv6 location.hostname (and only IPv6 hostnames) must be surrounded by square brackets\n    const isIpv6 = host.charAt(0) === \"[\";\n    // Potential speed-up for IPv4 detection:\n    // the tld of a domain name cannot be a number (IDN location.hostnames appear to be converted, needs further clarification)\n    const regexMatchIpv4 = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n    return !!host.match(regexMatchIpv4) || isIpv6;\n};\nconst getDefaultConfig = (protocol, host) => {\n    // If we're running in what looks like a local dev environment\n    // then default to using arweave.net\n    if (isLocal(protocol, host)) {\n        return {\n            protocol: \"https\",\n            host: \"arweave.net\",\n            port: 443,\n        };\n    }\n    //check if hostname is an IP address before removing first subdomain\n    if (!isIpAdress(host)) {\n        let split = host.split(\".\");\n        if (split.length >= 3) {\n            split.shift();\n            const parentDomain = split.join(\".\");\n            return {\n                protocol,\n                host: parentDomain,\n            };\n        }\n    }\n    // there are 2 potential garbage returns here:\n    // a non-GW ip address & a non-GW hostname without ArNS. garbage in, garbage out.\n    // they should be overridden with user inputs in apiConfig.\n    // otherwise we have a valid ip based GW address.\n    return {\n        protocol,\n        host,\n    };\n};\nexports.getDefaultConfig = getDefaultConfig;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log_1 = require(\"../utils/log\");\nclass ArdbBlock {\n    constructor(obj) {\n        this._id = obj.id;\n        this._timestamp = obj.timestamp;\n        this._height = obj.height;\n        this._previous = obj.previous;\n    }\n    // Getters\n    get id() {\n        if (!this._id)\n            log_1.log.show(\"ID wasn't defined, make sure you have selected to return it.\");\n        return this._id;\n    }\n    get timestamp() {\n        if (!this._timestamp)\n            log_1.log.show(\"Timestamp wasn't defined, make sure you have selected to return it.\");\n        return this._timestamp;\n    }\n    get height() {\n        if (!this._height)\n            log_1.log.show(\"Height wasn't defined, make sure you have selected to return it.\");\n        return this._height;\n    }\n    get previous() {\n        if (!this._previous)\n            log_1.log.show(\"Previous wasn't defined, make sure you have selected to return it.\");\n        return this._previous;\n    }\n}\nexports.default = ArdbBlock;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bignumber_js_1 = require(\"bignumber.js\");\nclass Ar {\n    /**\n     * Method to take a string value and return a bignumber object.\n     *\n     * @protected\n     * @type {Function}\n     * @memberof Arweave\n     */\n    BigNum;\n    constructor() {\n        // Configure and assign the constructor function for the bignumber library.\n        this.BigNum = (value, decimals) => {\n            let instance = bignumber_js_1.BigNumber.clone({ DECIMAL_PLACES: decimals });\n            return new instance(value);\n        };\n    }\n    winstonToAr(winstonString, { formatted = false, decimals = 12, trim = true } = {}) {\n        let number = this.stringToBigNum(winstonString, decimals).shiftedBy(-12);\n        return formatted ? number.toFormat(decimals) : number.toFixed(decimals);\n    }\n    arToWinston(arString, { formatted = false } = {}) {\n        let number = this.stringToBigNum(arString).shiftedBy(12);\n        return formatted ? number.toFormat() : number.toFixed(0);\n    }\n    compare(winstonStringA, winstonStringB) {\n        let a = this.stringToBigNum(winstonStringA);\n        let b = this.stringToBigNum(winstonStringB);\n        return a.comparedTo(b);\n    }\n    isEqual(winstonStringA, winstonStringB) {\n        return this.compare(winstonStringA, winstonStringB) === 0;\n    }\n    isLessThan(winstonStringA, winstonStringB) {\n        let a = this.stringToBigNum(winstonStringA);\n        let b = this.stringToBigNum(winstonStringB);\n        return a.isLessThan(b);\n    }\n    isGreaterThan(winstonStringA, winstonStringB) {\n        let a = this.stringToBigNum(winstonStringA);\n        let b = this.stringToBigNum(winstonStringB);\n        return a.isGreaterThan(b);\n    }\n    add(winstonStringA, winstonStringB) {\n        let a = this.stringToBigNum(winstonStringA);\n        let b = this.stringToBigNum(winstonStringB);\n        return a.plus(winstonStringB).toFixed(0);\n    }\n    sub(winstonStringA, winstonStringB) {\n        let a = this.stringToBigNum(winstonStringA);\n        let b = this.stringToBigNum(winstonStringB);\n        return a.minus(winstonStringB).toFixed(0);\n    }\n    stringToBigNum(stringValue, decimalPlaces = 12) {\n        return this.BigNum(stringValue, decimalPlaces);\n    }\n}\nexports.default = Ar;\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.2.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, -1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // The index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    // If any number is NaN, return NaN.\r\n    function maxOrMin(args, n) {\r\n      var k, y,\r\n        i = 1,\r\n        x = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        y = new BigNumber(args[i]);\r\n        if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n          x = y;\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arrayCompare = exports.MIN_CHUNK_SIZE = exports.MAX_CHUNK_SIZE = void 0;\nexports.chunkData = chunkData;\nexports.generateLeaves = generateLeaves;\nexports.computeRootHash = computeRootHash;\nexports.generateTree = generateTree;\nexports.generateTransactionChunks = generateTransactionChunks;\nexports.buildLayers = buildLayers;\nexports.generateProofs = generateProofs;\nexports.arrayFlatten = arrayFlatten;\nexports.intToBuffer = intToBuffer;\nexports.bufferToInt = bufferToInt;\nexports.validatePath = validatePath;\nexports.debug = debug;\n/**\n * @see {@link https://github.com/ArweaveTeam/arweave/blob/fbc381e0e36efffa45d13f2faa6199d3766edaa2/apps/arweave/src/ar_merkle.erl}\n */\nconst common_1 = require(\"../common\");\nconst utils_1 = require(\"./utils\");\nexports.MAX_CHUNK_SIZE = 256 * 1024;\nexports.MIN_CHUNK_SIZE = 32 * 1024;\nconst NOTE_SIZE = 32;\nconst HASH_SIZE = 32;\n/**\n * Takes the input data and chunks it into (mostly) equal sized chunks.\n * The last chunk will be a bit smaller as it contains the remainder\n * from the chunking process.\n */\nasync function chunkData(data) {\n    let chunks = [];\n    let rest = data;\n    let cursor = 0;\n    while (rest.byteLength >= exports.MAX_CHUNK_SIZE) {\n        let chunkSize = exports.MAX_CHUNK_SIZE;\n        // If the total bytes left will produce a chunk < MIN_CHUNK_SIZE,\n        // then adjust the amount we put in this 2nd last chunk.\n        let nextChunkSize = rest.byteLength - exports.MAX_CHUNK_SIZE;\n        if (nextChunkSize > 0 && nextChunkSize < exports.MIN_CHUNK_SIZE) {\n            chunkSize = Math.ceil(rest.byteLength / 2);\n            // console.log(`Last chunk will be: ${nextChunkSize} which is below ${MIN_CHUNK_SIZE}, adjusting current to ${chunkSize} with ${rest.byteLength} left.`)\n        }\n        const chunk = rest.slice(0, chunkSize);\n        const dataHash = await common_1.default.crypto.hash(chunk);\n        cursor += chunk.byteLength;\n        chunks.push({\n            dataHash,\n            minByteRange: cursor - chunk.byteLength,\n            maxByteRange: cursor,\n        });\n        rest = rest.slice(chunkSize);\n    }\n    chunks.push({\n        dataHash: await common_1.default.crypto.hash(rest),\n        minByteRange: cursor,\n        maxByteRange: cursor + rest.byteLength,\n    });\n    return chunks;\n}\nasync function generateLeaves(chunks) {\n    return Promise.all(chunks.map(async ({ dataHash, minByteRange, maxByteRange }) => {\n        return {\n            type: \"leaf\",\n            id: await hash(await Promise.all([hash(dataHash), hash(intToBuffer(maxByteRange))])),\n            dataHash: dataHash,\n            minByteRange,\n            maxByteRange,\n        };\n    }));\n}\n/**\n * Builds an arweave merkle tree and gets the root hash for the given input.\n */\nasync function computeRootHash(data) {\n    const rootNode = await generateTree(data);\n    return rootNode.id;\n}\nasync function generateTree(data) {\n    const rootNode = await buildLayers(await generateLeaves(await chunkData(data)));\n    return rootNode;\n}\n/**\n * Generates the data_root, chunks & proofs\n * needed for a transaction.\n *\n * This also checks if the last chunk is a zero-length\n * chunk and discards that chunk and proof if so.\n * (we do not need to upload this zero length chunk)\n *\n * @param data\n */\nasync function generateTransactionChunks(data) {\n    const chunks = await chunkData(data);\n    const leaves = await generateLeaves(chunks);\n    const root = await buildLayers(leaves);\n    const proofs = await generateProofs(root);\n    // Discard the last chunk & proof if it's zero length.\n    const lastChunk = chunks.slice(-1)[0];\n    if (lastChunk.maxByteRange - lastChunk.minByteRange === 0) {\n        chunks.splice(chunks.length - 1, 1);\n        proofs.splice(proofs.length - 1, 1);\n    }\n    return {\n        data_root: root.id,\n        chunks,\n        proofs,\n    };\n}\n/**\n * Starting with the bottom layer of leaf nodes, hash every second pair\n * into a new branch node, push those branch nodes onto a new layer,\n * and then recurse, building up the tree to it's root, where the\n * layer only consists of two items.\n */\nasync function buildLayers(nodes, level = 0) {\n    // If there is only 1 node left, this is going to be the root node\n    if (nodes.length < 2) {\n        const root = nodes[0];\n        // console.log(\"Root layer\", root);\n        return root;\n    }\n    const nextLayer = [];\n    for (let i = 0; i < nodes.length; i += 2) {\n        nextLayer.push(await hashBranch(nodes[i], nodes[i + 1]));\n    }\n    // console.log(\"Layer\", nextLayer);\n    return buildLayers(nextLayer, level + 1);\n}\n/**\n * Recursively search through all branches of the tree,\n * and generate a proof for each leaf node.\n */\nfunction generateProofs(root) {\n    const proofs = resolveBranchProofs(root);\n    if (!Array.isArray(proofs)) {\n        return [proofs];\n    }\n    return arrayFlatten(proofs);\n}\nfunction resolveBranchProofs(node, proof = new Uint8Array(), depth = 0) {\n    if (node.type == \"leaf\") {\n        return {\n            offset: node.maxByteRange - 1,\n            proof: (0, utils_1.concatBuffers)([\n                proof,\n                node.dataHash,\n                intToBuffer(node.maxByteRange),\n            ]),\n        };\n    }\n    if (node.type == \"branch\") {\n        const partialProof = (0, utils_1.concatBuffers)([\n            proof,\n            node.leftChild.id,\n            node.rightChild.id,\n            intToBuffer(node.byteRange),\n        ]);\n        return [\n            resolveBranchProofs(node.leftChild, partialProof, depth + 1),\n            resolveBranchProofs(node.rightChild, partialProof, depth + 1),\n        ];\n    }\n    throw new Error(`Unexpected node type`);\n}\nfunction arrayFlatten(input) {\n    const flat = [];\n    input.forEach((item) => {\n        if (Array.isArray(item)) {\n            flat.push(...arrayFlatten(item));\n        }\n        else {\n            flat.push(item);\n        }\n    });\n    return flat;\n}\nasync function hashBranch(left, right) {\n    if (!right) {\n        return left;\n    }\n    let branch = {\n        type: \"branch\",\n        id: await hash([\n            await hash(left.id),\n            await hash(right.id),\n            await hash(intToBuffer(left.maxByteRange)),\n        ]),\n        byteRange: left.maxByteRange,\n        maxByteRange: right.maxByteRange,\n        leftChild: left,\n        rightChild: right,\n    };\n    return branch;\n}\nasync function hash(data) {\n    if (Array.isArray(data)) {\n        data = common_1.default.utils.concatBuffers(data);\n    }\n    return new Uint8Array(await common_1.default.crypto.hash(data));\n}\nfunction intToBuffer(note) {\n    const buffer = new Uint8Array(NOTE_SIZE);\n    for (var i = buffer.length - 1; i >= 0; i--) {\n        var byte = note % 256;\n        buffer[i] = byte;\n        note = (note - byte) / 256;\n    }\n    return buffer;\n}\nfunction bufferToInt(buffer) {\n    let value = 0;\n    for (var i = 0; i < buffer.length; i++) {\n        value *= 256;\n        value += buffer[i];\n    }\n    return value;\n}\nconst arrayCompare = (a, b) => a.every((value, index) => b[index] === value);\nexports.arrayCompare = arrayCompare;\nasync function validatePath(id, dest, leftBound, rightBound, path) {\n    if (rightBound <= 0) {\n        return false;\n    }\n    if (dest >= rightBound) {\n        return validatePath(id, 0, rightBound - 1, rightBound, path);\n    }\n    if (dest < 0) {\n        return validatePath(id, 0, 0, rightBound, path);\n    }\n    if (path.length == HASH_SIZE + NOTE_SIZE) {\n        const pathData = path.slice(0, HASH_SIZE);\n        const endOffsetBuffer = path.slice(pathData.length, pathData.length + NOTE_SIZE);\n        const pathDataHash = await hash([\n            await hash(pathData),\n            await hash(endOffsetBuffer),\n        ]);\n        let result = (0, exports.arrayCompare)(id, pathDataHash);\n        if (result) {\n            return {\n                offset: rightBound - 1,\n                leftBound: leftBound,\n                rightBound: rightBound,\n                chunkSize: rightBound - leftBound,\n            };\n        }\n        return false;\n    }\n    const left = path.slice(0, HASH_SIZE);\n    const right = path.slice(left.length, left.length + HASH_SIZE);\n    const offsetBuffer = path.slice(left.length + right.length, left.length + right.length + NOTE_SIZE);\n    const offset = bufferToInt(offsetBuffer);\n    const remainder = path.slice(left.length + right.length + offsetBuffer.length);\n    const pathHash = await hash([\n        await hash(left),\n        await hash(right),\n        await hash(offsetBuffer),\n    ]);\n    if ((0, exports.arrayCompare)(id, pathHash)) {\n        if (dest < offset) {\n            return await validatePath(left, dest, leftBound, Math.min(rightBound, offset), remainder);\n        }\n        return await validatePath(right, dest, Math.max(leftBound, offset), rightBound, remainder);\n    }\n    return false;\n}\n/**\n * Inspect an arweave chunk proof.\n * Takes proof, parses, reads and displays the values for console logging.\n * One proof section per line\n * Format: left,right,offset => hash\n */\nasync function debug(proof, output = \"\") {\n    if (proof.byteLength < 1) {\n        return output;\n    }\n    const left = proof.slice(0, HASH_SIZE);\n    const right = proof.slice(left.length, left.length + HASH_SIZE);\n    const offsetBuffer = proof.slice(left.length + right.length, left.length + right.length + NOTE_SIZE);\n    const offset = bufferToInt(offsetBuffer);\n    const remainder = proof.slice(left.length + right.length + offsetBuffer.length);\n    const pathHash = await hash([\n        await hash(left),\n        await hash(right),\n        await hash(offsetBuffer),\n    ]);\n    const updatedOutput = `${output}\\n${JSON.stringify(Buffer.from(left))},${JSON.stringify(Buffer.from(right))},${offset} => ${JSON.stringify(pathHash)}`;\n    return debug(remainder, updatedOutput);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SiloResource = void 0;\nconst ArweaveUtils = require(\"./lib/utils\");\nclass Silo {\n    api;\n    crypto;\n    transactions;\n    constructor(api, crypto, transactions) {\n        this.api = api;\n        this.crypto = crypto;\n        this.transactions = transactions;\n    }\n    async get(siloURI) {\n        if (!siloURI) {\n            throw new Error(`No Silo URI specified`);\n        }\n        const resource = await this.parseUri(siloURI);\n        const ids = await this.transactions.search(\"Silo-Name\", resource.getAccessKey());\n        if (ids.length == 0) {\n            throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n        }\n        const transaction = await this.transactions.get(ids[0]);\n        if (!transaction) {\n            throw new Error(`No data could be found for the Silo URI: ${siloURI}`);\n        }\n        const encrypted = transaction.get(\"data\", { decode: true, string: false });\n        return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n    }\n    async readTransactionData(transaction, siloURI) {\n        if (!siloURI) {\n            throw new Error(`No Silo URI specified`);\n        }\n        const resource = await this.parseUri(siloURI);\n        const encrypted = transaction.get(\"data\", { decode: true, string: false });\n        return this.crypto.decrypt(encrypted, resource.getEncryptionKey());\n    }\n    async parseUri(siloURI) {\n        const parsed = siloURI.match(/^([a-z0-9-_]+)\\.([0-9]+)/i);\n        if (!parsed) {\n            throw new Error(`Invalid Silo name, must be a name in the format of [a-z0-9]+.[0-9]+, e.g. 'bubble.7'`);\n        }\n        const siloName = parsed[1];\n        const hashIterations = Math.pow(2, parseInt(parsed[2]));\n        const digest = await this.hash(ArweaveUtils.stringToBuffer(siloName), hashIterations);\n        const accessKey = ArweaveUtils.bufferTob64(digest.slice(0, 15));\n        const encryptionkey = await this.hash(digest.slice(16, 31), 1);\n        return new SiloResource(siloURI, accessKey, encryptionkey);\n    }\n    async hash(input, iterations) {\n        let digest = await this.crypto.hash(input);\n        for (let count = 0; count < iterations - 1; count++) {\n            digest = await this.crypto.hash(digest);\n        }\n        return digest;\n    }\n}\nexports.default = Silo;\nclass SiloResource {\n    uri;\n    accessKey;\n    encryptionKey;\n    constructor(uri, accessKey, encryptionKey) {\n        this.uri = uri;\n        this.accessKey = accessKey;\n        this.encryptionKey = encryptionKey;\n    }\n    getUri() {\n        return this.uri;\n    }\n    getAccessKey() {\n        return this.accessKey;\n    }\n    getEncryptionKey() {\n        return this.encryptionKey;\n    }\n}\nexports.SiloResource = SiloResource;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log_1 = require(\"../utils/log\");\nclass ArdbTransaction {\n    constructor(obj, arweave) {\n        this._id = obj.id;\n        this._anchor = obj.anchor;\n        this._signature = obj.signature;\n        this._recipient = obj.recipient;\n        this._owner = obj.owner;\n        this._fee = obj.fee;\n        this._quantity = obj.quantity;\n        this._data = obj.data;\n        this._tags = obj.tags;\n        this._block = obj.block;\n        if (obj.parent && obj.parent.id) {\n            this._parent = obj.parent;\n        }\n        this.arweave = arweave;\n    }\n    // Getters\n    get id() {\n        if (!this._id)\n            log_1.log.show(\"ID wasn't defined, make sure you have selected to return it.\");\n        return this._id;\n    }\n    get anchor() {\n        if (!this._anchor)\n            log_1.log.show(\"Anchor wasn't defined, make sure you have selected to return it.\");\n        return this._anchor;\n    }\n    get signature() {\n        if (!this._signature)\n            log_1.log.show(\"Signature wasn't defined, make sure you have selected to return it.\");\n        return this._signature;\n    }\n    get recipient() {\n        if (!this._recipient)\n            log_1.log.show(\"Recipient wasn't defined, make sure you have selected to return it.\");\n        return this._recipient;\n    }\n    get owner() {\n        if (!this._owner)\n            log_1.log.show(\"Owner wasn't defined, make sure you have selected to return it.\");\n        return this._owner;\n    }\n    get fee() {\n        if (!this._fee)\n            log_1.log.show(\"Fee wasn't defined, make sure you have selected to return it.\");\n        return this._fee;\n    }\n    get quantity() {\n        if (!this._quantity)\n            log_1.log.show(\"Quantity wasn't defined, make sure you have selected to return it.\");\n        return this._quantity;\n    }\n    get data() {\n        if (!this._data)\n            log_1.log.show(\"Data wasn't defined, make sure you have selected to return it.\");\n        return this._data;\n    }\n    get tags() {\n        if (!this._tags)\n            log_1.log.show(\"Tags wasn't defined, make sure you have selected to return it.\");\n        return this._tags;\n    }\n    get block() {\n        if (!this._block)\n            log_1.log.show(\"Block wasn't defined, make sure you have selected to return it.\");\n        return this._block;\n    }\n    get parent() {\n        if (!this._parent || !this._parent.id)\n            log_1.log.show(\"Parent wasn't defined, make sure you have selected to return it.\");\n        return this._parent;\n    }\n}\nexports.default = ArdbTransaction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.Log = exports.LOGS = void 0;\nvar LOGS;\n(function (LOGS) {\n    LOGS[LOGS[\"NO\"] = 0] = \"NO\";\n    LOGS[LOGS[\"YES\"] = 1] = \"YES\";\n    LOGS[LOGS[\"ARWEAVE\"] = 2] = \"ARWEAVE\";\n})(LOGS = exports.LOGS || (exports.LOGS = {}));\nclass Log {\n    constructor() {\n        this.logs = LOGS.ARWEAVE;\n    }\n    init(logLevel = LOGS.ARWEAVE, arweave) {\n        this.logs = logLevel;\n        this.arweave = arweave;\n        return this;\n    }\n    show(str, type = 'log') {\n        if (this.logs === LOGS.YES || (this.logs === LOGS.ARWEAVE && this.arweave.getConfig().api.logging)) {\n            console[type](str);\n        }\n    }\n}\nexports.Log = Log;\nexports.log = new Log();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Network {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    getInfo() {\n        return this.api.get(`info`).then((response) => {\n            return response.data;\n        });\n    }\n    getPeers() {\n        return this.api.get(`peers`).then((response) => {\n            return response.data;\n        });\n    }\n}\nexports.default = Network;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = void 0;\nconst ArweaveUtils = require(\"./utils\");\nconst deepHash_1 = require(\"./deepHash\");\nconst merkle_1 = require(\"./merkle\");\nclass BaseObject {\n    get(field, options) {\n        if (!Object.getOwnPropertyNames(this).includes(field)) {\n            throw new Error(`Field \"${field}\" is not a property of the Arweave Transaction class.`);\n        }\n        // Handle fields that are Uint8Arrays.\n        // To maintain compat we encode them to b64url\n        // if decode option is not specificed.\n        if (this[field] instanceof Uint8Array) {\n            if (options && options.decode && options.string) {\n                return ArweaveUtils.bufferToString(this[field]);\n            }\n            if (options && options.decode && !options.string) {\n                return this[field];\n            }\n            return ArweaveUtils.bufferTob64Url(this[field]);\n        }\n        if (this[field] instanceof Array) {\n            if (options?.decode !== undefined || options?.string !== undefined) {\n                if (field === \"tags\") {\n                    console.warn(`Did you mean to use 'transaction[\"tags\"]' ?`);\n                }\n                throw new Error(`Cannot decode or stringify an array.`);\n            }\n            return this[field];\n        }\n        if (options && options.decode == true) {\n            if (options && options.string) {\n                return ArweaveUtils.b64UrlToString(this[field]);\n            }\n            return ArweaveUtils.b64UrlToBuffer(this[field]);\n        }\n        return this[field];\n    }\n}\nclass Tag extends BaseObject {\n    name;\n    value;\n    constructor(name, value, decode = false) {\n        super();\n        this.name = name;\n        this.value = value;\n    }\n}\nexports.Tag = Tag;\nclass Transaction extends BaseObject {\n    format = 2;\n    id = \"\";\n    last_tx = \"\";\n    owner = \"\";\n    tags = [];\n    target = \"\";\n    quantity = \"0\";\n    data_size = \"0\";\n    data = new Uint8Array();\n    data_root = \"\";\n    reward = \"0\";\n    signature = \"\";\n    // Computed when needed.\n    chunks;\n    constructor(attributes = {}) {\n        super();\n        Object.assign(this, attributes);\n        // If something passes in a Tx that has been toJSON'ed and back,\n        // or where the data was filled in from /tx/data endpoint.\n        // data will be b64url encoded, so decode it.\n        if (typeof this.data === \"string\") {\n            this.data = ArweaveUtils.b64UrlToBuffer(this.data);\n        }\n        if (attributes.tags) {\n            this.tags = attributes.tags.map((tag) => {\n                return new Tag(tag.name, tag.value);\n            });\n        }\n    }\n    addTag(name, value) {\n        this.tags.push(new Tag(ArweaveUtils.stringToB64Url(name), ArweaveUtils.stringToB64Url(value)));\n    }\n    toJSON() {\n        return {\n            format: this.format,\n            id: this.id,\n            last_tx: this.last_tx,\n            owner: this.owner,\n            tags: this.tags,\n            target: this.target,\n            quantity: this.quantity,\n            data: ArweaveUtils.bufferTob64Url(this.data),\n            data_size: this.data_size,\n            data_root: this.data_root,\n            data_tree: this.data_tree,\n            reward: this.reward,\n            signature: this.signature,\n        };\n    }\n    setOwner(owner) {\n        this.owner = owner;\n    }\n    setSignature({ id, owner, reward, tags, signature, }) {\n        this.id = id;\n        this.owner = owner;\n        if (reward)\n            this.reward = reward;\n        if (tags)\n            this.tags = tags;\n        this.signature = signature;\n    }\n    async prepareChunks(data) {\n        // Note: we *do not* use `this.data`, the caller may be\n        // operating on a transaction with an zero length data field.\n        // This function computes the chunks for the data passed in and\n        // assigns the result to this transaction. It should not read the\n        // data *from* this transaction.\n        if (!this.chunks && data.byteLength > 0) {\n            this.chunks = await (0, merkle_1.generateTransactionChunks)(data);\n            this.data_root = ArweaveUtils.bufferTob64Url(this.chunks.data_root);\n        }\n        if (!this.chunks && data.byteLength === 0) {\n            this.chunks = {\n                chunks: [],\n                data_root: new Uint8Array(),\n                proofs: [],\n            };\n            this.data_root = \"\";\n        }\n    }\n    // Returns a chunk in a format suitable for posting to /chunk.\n    // Similar to `prepareChunks()` this does not operate `this.data`,\n    // instead using the data passed in.\n    getChunk(idx, data) {\n        if (!this.chunks) {\n            throw new Error(`Chunks have not been prepared`);\n        }\n        const proof = this.chunks.proofs[idx];\n        const chunk = this.chunks.chunks[idx];\n        return {\n            data_root: this.data_root,\n            data_size: this.data_size,\n            data_path: ArweaveUtils.bufferTob64Url(proof.proof),\n            offset: proof.offset.toString(),\n            chunk: ArweaveUtils.bufferTob64Url(data.slice(chunk.minByteRange, chunk.maxByteRange)),\n        };\n    }\n    async getSignatureData() {\n        switch (this.format) {\n            case 1:\n                let tags = this.tags.reduce((accumulator, tag) => {\n                    return ArweaveUtils.concatBuffers([\n                        accumulator,\n                        tag.get(\"name\", { decode: true, string: false }),\n                        tag.get(\"value\", { decode: true, string: false }),\n                    ]);\n                }, new Uint8Array());\n                return ArweaveUtils.concatBuffers([\n                    this.get(\"owner\", { decode: true, string: false }),\n                    this.get(\"target\", { decode: true, string: false }),\n                    this.get(\"data\", { decode: true, string: false }),\n                    ArweaveUtils.stringToBuffer(this.quantity),\n                    ArweaveUtils.stringToBuffer(this.reward),\n                    this.get(\"last_tx\", { decode: true, string: false }),\n                    tags,\n                ]);\n            case 2:\n                if (!this.data_root) {\n                    await this.prepareChunks(this.data);\n                }\n                const tagList = this.tags.map((tag) => [\n                    tag.get(\"name\", { decode: true, string: false }),\n                    tag.get(\"value\", { decode: true, string: false }),\n                ]);\n                return await (0, deepHash_1.default)([\n                    ArweaveUtils.stringToBuffer(this.format.toString()),\n                    this.get(\"owner\", { decode: true, string: false }),\n                    this.get(\"target\", { decode: true, string: false }),\n                    ArweaveUtils.stringToBuffer(this.quantity),\n                    ArweaveUtils.stringToBuffer(this.reward),\n                    this.get(\"last_tx\", { decode: true, string: false }),\n                    tagList,\n                    ArweaveUtils.stringToBuffer(this.data_size),\n                    this.get(\"data_root\", { decode: true, string: false }),\n                ]);\n            default:\n                throw new Error(`Unexpected transaction format: ${this.format}`);\n        }\n    }\n}\nexports.default = Transaction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.concatBuffers = concatBuffers;\nexports.b64UrlToString = b64UrlToString;\nexports.bufferToString = bufferToString;\nexports.stringToBuffer = stringToBuffer;\nexports.stringToB64Url = stringToB64Url;\nexports.b64UrlToBuffer = b64UrlToBuffer;\nexports.bufferTob64 = bufferTob64;\nexports.bufferTob64Url = bufferTob64Url;\nexports.b64UrlEncode = b64UrlEncode;\nexports.b64UrlDecode = b64UrlDecode;\nconst B64js = require(\"base64-js\");\nfunction concatBuffers(buffers) {\n    let total_length = 0;\n    for (let i = 0; i < buffers.length; i++) {\n        total_length += buffers[i].byteLength;\n    }\n    let temp = new Uint8Array(total_length);\n    let offset = 0;\n    temp.set(new Uint8Array(buffers[0]), offset);\n    offset += buffers[0].byteLength;\n    for (let i = 1; i < buffers.length; i++) {\n        temp.set(new Uint8Array(buffers[i]), offset);\n        offset += buffers[i].byteLength;\n    }\n    return temp;\n}\nfunction b64UrlToString(b64UrlString) {\n    let buffer = b64UrlToBuffer(b64UrlString);\n    return bufferToString(buffer);\n}\nfunction bufferToString(buffer) {\n    return new TextDecoder(\"utf-8\", { fatal: true }).decode(buffer);\n}\nfunction stringToBuffer(string) {\n    return new TextEncoder().encode(string);\n}\nfunction stringToB64Url(string) {\n    return bufferTob64Url(stringToBuffer(string));\n}\nfunction b64UrlToBuffer(b64UrlString) {\n    return new Uint8Array(B64js.toByteArray(b64UrlDecode(b64UrlString)));\n}\nfunction bufferTob64(buffer) {\n    return B64js.fromByteArray(new Uint8Array(buffer));\n}\nfunction bufferTob64Url(buffer) {\n    return b64UrlEncode(bufferTob64(buffer));\n}\nfunction b64UrlEncode(b64UrlString) {\n    try {\n        return b64UrlString\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n            .replace(/\\=/g, \"\");\n    }\n    catch (error) {\n        throw new Error(\"Failed to encode string\", { cause: error });\n    }\n}\nfunction b64UrlDecode(b64UrlString) {\n    try {\n        b64UrlString = b64UrlString.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n        let padding;\n        b64UrlString.length % 4 == 0\n            ? (padding = 0)\n            : (padding = 4 - (b64UrlString.length % 4));\n        return b64UrlString.concat(\"=\".repeat(padding));\n    }\n    catch (error) {\n        throw new Error(\"Failed to decode string\", { cause: error });\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst error_1 = require(\"./lib/error\");\nconst ArweaveUtils = require(\"./lib/utils\");\nclass Chunks {\n    api;\n    constructor(api) {\n        this.api = api;\n    }\n    async getTransactionOffset(id) {\n        const resp = await this.api.get(`tx/${id}/offset`);\n        if (resp.status === 200) {\n            return resp.data;\n        }\n        throw new Error(`Unable to get transaction offset: ${(0, error_1.getError)(resp)}`);\n    }\n    async getChunk(offset) {\n        const resp = await this.api.get(`chunk/${offset}`);\n        if (resp.status === 200) {\n            return resp.data;\n        }\n        throw new Error(`Unable to get chunk: ${(0, error_1.getError)(resp)}`);\n    }\n    async getChunkData(offset) {\n        const chunk = await this.getChunk(offset);\n        const buf = ArweaveUtils.b64UrlToBuffer(chunk.chunk);\n        return buf;\n    }\n    firstChunkOffset(offsetResponse) {\n        return parseInt(offsetResponse.offset) - parseInt(offsetResponse.size) + 1;\n    }\n    async downloadChunkedData(id) {\n        const offsetResponse = await this.getTransactionOffset(id);\n        const size = parseInt(offsetResponse.size);\n        const endOffset = parseInt(offsetResponse.offset);\n        const startOffset = endOffset - size + 1;\n        const data = new Uint8Array(size);\n        let byte = 0;\n        while (byte < size) {\n            if (this.api.config.logging) {\n                console.log(`[chunk] ${byte}/${size}`);\n            }\n            let chunkData;\n            try {\n                chunkData = await this.getChunkData(startOffset + byte);\n            }\n            catch (error) {\n                console.error(`[chunk] Failed to fetch chunk at offset ${startOffset + byte}`);\n                console.error(`[chunk] This could indicate that the chunk wasn't uploaded or hasn't yet seeded properly to a particular gateway/node`);\n            }\n            if (chunkData) {\n                data.set(chunkData, byte);\n                byte += chunkData.length;\n            }\n            else {\n                throw new Error(`Couldn't complete data download at ${byte}/${size}`);\n            }\n        }\n        return data;\n    }\n}\nexports.default = Chunks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ar_1 = require(\"./ar\");\nconst api_1 = require(\"./lib/api\");\nconst node_driver_1 = require(\"./lib/crypto/webcrypto-driver\");\nconst network_1 = require(\"./network\");\nconst transactions_1 = require(\"./transactions\");\nconst wallets_1 = require(\"./wallets\");\nconst transaction_1 = require(\"./lib/transaction\");\nconst ArweaveUtils = require(\"./lib/utils\");\nconst silo_1 = require(\"./silo\");\nconst chunks_1 = require(\"./chunks\");\nconst blocks_1 = require(\"./blocks\");\nclass Arweave {\n    api;\n    wallets;\n    transactions;\n    network;\n    blocks;\n    ar;\n    silo;\n    chunks;\n    static init;\n    static crypto = new node_driver_1.default();\n    static utils = ArweaveUtils;\n    constructor(apiConfig) {\n        this.api = new api_1.default(apiConfig);\n        this.wallets = new wallets_1.default(this.api, Arweave.crypto);\n        this.chunks = new chunks_1.default(this.api);\n        this.transactions = new transactions_1.default(this.api, Arweave.crypto, this.chunks);\n        this.silo = new silo_1.default(this.api, this.crypto, this.transactions);\n        this.network = new network_1.default(this.api);\n        this.blocks = new blocks_1.default(this.api, this.network);\n        this.ar = new ar_1.default();\n    }\n    /** @deprecated */\n    get crypto() {\n        return Arweave.crypto;\n    }\n    /** @deprecated */\n    get utils() {\n        return Arweave.utils;\n    }\n    getConfig() {\n        return {\n            api: this.api.getConfig(),\n            crypto: null,\n        };\n    }\n    async createTransaction(attributes, jwk) {\n        const transaction = {};\n        Object.assign(transaction, attributes);\n        if (!attributes.data && !(attributes.target && attributes.quantity)) {\n            throw new Error(`A new Arweave transaction must have a 'data' value, or 'target' and 'quantity' values.`);\n        }\n        if (attributes.owner == undefined) {\n            if (jwk && jwk !== \"use_wallet\") {\n                transaction.owner = jwk.n;\n            }\n        }\n        if (attributes.last_tx == undefined) {\n            transaction.last_tx = await this.transactions.getTransactionAnchor();\n        }\n        if (typeof attributes.data === \"string\") {\n            attributes.data = ArweaveUtils.stringToBuffer(attributes.data);\n        }\n        if (attributes.data instanceof ArrayBuffer) {\n            attributes.data = new Uint8Array(attributes.data);\n        }\n        if (attributes.data && !(attributes.data instanceof Uint8Array)) {\n            throw new Error(\"Expected data to be a string, Uint8Array or ArrayBuffer\");\n        }\n        if (attributes.reward == undefined) {\n            const length = attributes.data ? attributes.data.byteLength : 0;\n            transaction.reward = await this.transactions.getPrice(length, transaction.target);\n        }\n        // here we should call prepare chunk\n        transaction.data_root = \"\";\n        transaction.data_size = attributes.data\n            ? attributes.data.byteLength.toString()\n            : \"0\";\n        transaction.data = attributes.data || new Uint8Array(0);\n        const createdTransaction = new transaction_1.default(transaction);\n        await createdTransaction.getSignatureData();\n        return createdTransaction;\n    }\n    async createSiloTransaction(attributes, jwk, siloUri) {\n        const transaction = {};\n        Object.assign(transaction, attributes);\n        if (!attributes.data) {\n            throw new Error(`Silo transactions must have a 'data' value`);\n        }\n        if (!siloUri) {\n            throw new Error(`No Silo URI specified.`);\n        }\n        if (attributes.target || attributes.quantity) {\n            throw new Error(`Silo transactions can only be used for storing data, sending AR to other wallets isn't supported.`);\n        }\n        if (attributes.owner == undefined) {\n            if (!jwk || !jwk.n) {\n                throw new Error(`A new Arweave transaction must either have an 'owner' attribute, or you must provide the jwk parameter.`);\n            }\n            transaction.owner = jwk.n;\n        }\n        if (attributes.last_tx == undefined) {\n            transaction.last_tx = await this.transactions.getTransactionAnchor();\n        }\n        const siloResource = await this.silo.parseUri(siloUri);\n        if (typeof attributes.data == \"string\") {\n            const encrypted = await this.crypto.encrypt(ArweaveUtils.stringToBuffer(attributes.data), siloResource.getEncryptionKey());\n            transaction.reward = await this.transactions.getPrice(encrypted.byteLength);\n            transaction.data = ArweaveUtils.bufferTob64Url(encrypted);\n        }\n        if (attributes.data instanceof Uint8Array) {\n            const encrypted = await this.crypto.encrypt(attributes.data, siloResource.getEncryptionKey());\n            transaction.reward = await this.transactions.getPrice(encrypted.byteLength);\n            transaction.data = ArweaveUtils.bufferTob64Url(encrypted);\n        }\n        const siloTransaction = new transaction_1.default(transaction);\n        siloTransaction.addTag(\"Silo-Name\", siloResource.getAccessKey());\n        siloTransaction.addTag(\"Silo-Version\", `0.1.0`);\n        return siloTransaction;\n    }\n    arql(query) {\n        return this.api\n            .post(\"/arql\", query)\n            .then((response) => response.data || []);\n    }\n}\nexports.default = Arweave;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getError = getError;\nclass ArweaveError extends Error {\n    type;\n    response;\n    constructor(type, optional = {}) {\n        if (optional.message) {\n            super(optional.message);\n        }\n        else {\n            super();\n        }\n        this.type = type;\n        this.response = optional.response;\n    }\n    getType() {\n        return this.type;\n    }\n}\nexports.default = ArweaveError;\n// Safely get error string\n// from a response, falling back to\n// resp.data, statusText or 'unknown'.\n// Note: a wrongly set content-type can\n// cause what is a json response to be interepted\n// as a string or Buffer, so we handle that too.\nfunction getError(resp) {\n    let data = resp.data;\n    if (typeof resp.data === \"string\") {\n        try {\n            data = JSON.parse(resp.data);\n        }\n        catch (e) { }\n    }\n    if (resp.data instanceof ArrayBuffer || resp.data instanceof Uint8Array) {\n        try {\n            data = JSON.parse(data.toString());\n        }\n        catch (e) { }\n    }\n    return data ? data.error || data : resp.statusText || \"unknown\";\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Api {\n    METHOD_GET = \"GET\";\n    METHOD_POST = \"POST\";\n    config;\n    constructor(config) {\n        this.applyConfig(config);\n    }\n    applyConfig(config) {\n        this.config = this.mergeDefaults(config);\n    }\n    getConfig() {\n        return this.config;\n    }\n    mergeDefaults(config) {\n        const protocol = config.protocol || \"http\";\n        const port = config.port || (protocol === \"https\" ? 443 : 80);\n        return {\n            host: config.host || \"127.0.0.1\",\n            protocol,\n            port,\n            timeout: config.timeout || 20000,\n            logging: config.logging || false,\n            logger: config.logger || console.log,\n            network: config.network,\n        };\n    }\n    async get(endpoint, config) {\n        return await this.request(endpoint, { ...config, method: this.METHOD_GET });\n    }\n    async post(endpoint, body, config) {\n        const headers = new Headers(config?.headers || {});\n        if (!headers.get(\"content-type\")?.includes(\"application/json\")) {\n            headers.append(\"content-type\", \"application/json\");\n        }\n        headers.append(\"accept\", \"application/json, text/plain, */*\");\n        return await this.request(endpoint, {\n            ...config,\n            method: this.METHOD_POST,\n            body: typeof body !== \"string\" ? JSON.stringify(body) : body,\n            headers,\n        });\n    }\n    async request(endpoint, init) {\n        const headers = new Headers(init?.headers || {});\n        const baseURL = `${this.config.protocol}://${this.config.host}:${this.config.port}`;\n        /* responseType is purely for backwards compatibility with external apps */\n        const responseType = init?.responseType;\n        delete init?.responseType;\n        if (endpoint.startsWith(\"/\")) {\n            endpoint = endpoint.slice(1);\n        }\n        if (this.config.network) {\n            headers.append(\"x-network\", this.config.network);\n        }\n        if (this.config.logging) {\n            this.config.logger(`Requesting: ${baseURL}/${endpoint}`);\n        }\n        let res = await fetch(`${baseURL}/${endpoint}`, {\n            ...(init || {}),\n            headers,\n        });\n        if (this.config.logging) {\n            this.config.logger(`Response:   ${res.url} - ${res.status}`);\n        }\n        const contentType = res.headers.get(\"content-type\");\n        const charset = contentType?.match(/charset=([^()<>@,;:\\\"/[\\]?.=\\s]*)/i)?.[1];\n        const response = res;\n        const decodeText = async () => {\n            if (charset) {\n                try {\n                    response.data = new TextDecoder(charset).decode(await res.arrayBuffer());\n                }\n                catch (e) {\n                    response.data = (await res.text());\n                }\n            }\n            else {\n                response.data = (await res.text());\n            }\n        };\n        if (responseType === \"arraybuffer\") {\n            response.data = (await res.arrayBuffer());\n        }\n        else if (responseType === \"text\") {\n            await decodeText();\n        }\n        else if (responseType === \"webstream\") {\n            response.data = addAsyncIterator(res.body);\n        }\n        else {\n            /** axios defaults to JSON, and then text, we mimic the behaviour */\n            try {\n                let test = await res.clone().json();\n                if (typeof test !== \"object\") {\n                    await decodeText();\n                }\n                else {\n                    response.data = (await res.json());\n                }\n                test = null;\n            }\n            catch {\n                await decodeText();\n            }\n        }\n        return response;\n    }\n}\nexports.default = Api;\n// | ReadableStream<Uint8Array>\nconst addAsyncIterator = (body) => {\n    const bodyWithIter = body;\n    if (typeof bodyWithIter[Symbol.asyncIterator] === \"undefined\") {\n        bodyWithIter[Symbol.asyncIterator] = webIiterator(body);\n    }\n    return bodyWithIter;\n};\nconst webIiterator = function (stream) {\n    return async function* iteratorGenerator() {\n        const reader = stream.getReader(); //lock\n        try {\n            while (true) {\n                const { done, value } = await reader.read();\n                if (done)\n                    return;\n                yield value;\n            }\n        }\n        finally {\n            reader.releaseLock(); //unlock\n        }\n    };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Arweave from 'arweave';\nimport ArDB from 'ardb';\n\n// Initialize Arweave with explicit configuration for consistency across environments\nconst arweave = Arweave.init({\n    host: 'arweave.net',  // Explicitly set the host\n    port: 443,\n    protocol: 'https',\n    timeout: 30000,       // Increased timeout for reliability\n    logging: true         // Enable logging to help debug issues\n});\n\n// Initialize ArDB with the configured Arweave instance and explicit GraphQL endpoint\n// Note: GraphQL uses a different format than the main API\nconst ardb = new ArDB(arweave, {\n    graphql: {\n        host: 'arweave.net',  // Just the host domain, not the full path\n        port: 443,\n        protocol: 'https',\n        timeout: 30000\n    }\n});\n\n// Log initialization for debugging\nconsole.log('Arweave initialized with host:', arweave.api.config.host);\nconsole.log('Environment:', {\n    production: typeof window !== 'undefined' && window.location.hostname !== 'localhost',\n    hostname: typeof window !== 'undefined' ? window.location.hostname : 'unknown'\n});\n\n// DOM Elements\nconst nameFilter = document.getElementById('nameFilter');\nconst locationFilter = document.getElementById('locationFilter');\nconst associationsFilter = document.getElementById('associationsFilter');\nconst scoreFilter = document.getElementById('scoreFilter');\nconst applyFiltersBtn = document.getElementById('applyFilters');\nconst resultsDiv = document.getElementById('results');\nconst resultsCount = document.getElementById('resultsCount');\n\n// Query Arweave for ratings using ArDB\nasync function queryRatings() {\n    // Show loading state in the UI\n    resultsDiv.innerHTML = `\n        <div class=\"p-4 text-center\">\n            <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mb-2\"></div>\n            <p>Querying the Arweave network for ratings...</p>\n        </div>\n    `;\n    \n    try {\n        console.log('Starting query at:', new Date().toISOString());\n        \n        // Create a more lenient query - only search by App-Name\n        let query = ardb.search('transactions')\n            .tag('App-Name', 'RateAnybody');\n            \n        console.log('Query created with App-Name tag');\n\n        // Apply filters if provided - but only as optional enhancements\n        if (nameFilter.value) {\n            console.log('Adding name filter:', nameFilter.value);\n            const nameParts = nameFilter.value.split(' ');\n            query = query.tag('First-Name', nameParts[0]);\n        }\n\n        if (locationFilter.value) {\n            console.log('Adding location filter:', locationFilter.value);\n            query = query.tag('Location', locationFilter.value);\n        }\n\n        if (associationsFilter.value) {\n            console.log('Adding associations filter:', associationsFilter.value);\n            query = query.tag('Associations', associationsFilter.value);\n        }\n\n        if (scoreFilter.value) {\n            console.log('Adding score filter:', scoreFilter.value);\n            query = query.tag('Rating-Score', scoreFilter.value);\n        }\n\n        // Log the full query for debugging\n        console.log('Query configuration:', query);\n        \n        // Execute the query and get all results with timeout handling\n        console.log('Executing query at:', new Date().toISOString());\n        \n        // Create a promise with timeout for the query\n        const queryPromise = query.findAll();\n        const timeoutPromise = new Promise((_, reject) => {\n            setTimeout(() => reject(new Error('Query timed out after 30 seconds')), 30000);\n        });\n        \n        // Race the query against the timeout\n        const results = await Promise.race([queryPromise, timeoutPromise]);\n        \n        console.log('Query completed at:', new Date().toISOString());\n        console.log('Query results count:', results.length);\n        \n        // Enhanced logging of results\n        if (results.length === 0) {\n            console.warn('⚠️ No results found! This might indicate:');\n            console.warn('  - No ratings exist with the App-Name \"RateAnybody\"');\n            console.warn('  - CORS issues with the Arweave gateway');\n            console.warn('  - Network connectivity problems');\n            \n            // Add an alternative approach for debugging\n            console.log('Attempting direct gateway query for diagnostics...');\n            try {\n                // Use direct gateway HTTP request instead of GraphQL\n                // This avoids potential CORS issues with GraphQL endpoints\n                const gatewayUrl = 'https://arweave.net/gateway/tags/App-Name/RateAnybody';\n                console.log('Checking direct gateway URL:', gatewayUrl);\n                \n                const response = await fetch(gatewayUrl, {\n                    method: 'GET',\n                    headers: { \n                        'Accept': 'application/json'\n                    }\n                });\n                \n                if (response.ok) {\n                    const data = await response.json();\n                    console.log('Gateway query results:', data);\n                    \n                    if (data && data.length > 0) {\n                        console.warn('⚠️ Gateway found results but ArDB did not - likely a CORS or library issue');\n                        \n                        // Add a helpful message to the UI\n                        resultsDiv.innerHTML = `\n                            <div class=\"bg-yellow-50 border-l-4 border-yellow-500 p-4 mb-4 rounded\">\n                                <div class=\"flex\">\n                                    <div class=\"flex-shrink-0\">\n                                        <svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                                        </svg>\n                                    </div>\n                                    <div class=\"ml-3\">\n                                        <h3 class=\"text-sm font-medium text-yellow-800\">CORS Issue Detected</h3>\n                                        <div class=\"mt-2 text-sm text-yellow-700\">\n                                            <p>We detected that ratings exist but cannot be displayed due to browser security restrictions.</p>\n                                            <p class=\"mt-2\">Try visiting the official gateway directly:</p>\n                                            <p class=\"mt-1\"><a href=\"${gatewayUrl}\" target=\"_blank\" class=\"text-blue-600 hover:underline\">${gatewayUrl}</a></p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        `;\n                    }\n                } else {\n                    console.error('Gateway query failed with status:', response.status);\n                }\n            } catch (directError) {\n                console.error('Direct gateway query failed:', directError);\n            }\n        } else {\n            // Log actual results for debugging\n            results.forEach((result, index) => {\n                console.log(`Result ${index + 1}:`, {\n                    id: result.id,\n                    owner: result.owner?.address?.substring(0, 8) + '...',\n                    tags: result.tags.map(tag => `${tag.name}: ${tag.value}`)\n                });\n            });\n        }\n\n        return results;\n    } catch (error) {\n        console.error('Error querying Arweave:', error);\n        \n        // Show error in the UI\n        resultsDiv.innerHTML = `\n            <div class=\"bg-red-50 border-l-4 border-red-500 p-4 rounded\">\n                <div class=\"flex\">\n                    <div class=\"flex-shrink-0\">\n                        <svg class=\"h-5 w-5 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                        </svg>\n                    </div>\n                    <div class=\"ml-3\">\n                        <h3 class=\"text-sm font-medium text-red-800\">Error Querying Arweave</h3>\n                        <div class=\"mt-2 text-sm text-red-700\">\n                            <p>${error.message}</p>\n                            <p class=\"mt-2\">If you're viewing this on the Cloudflare deployment, try the following:</p>\n                            <ul class=\"list-disc pl-5 mt-1\">\n                                <li>Check browser console for CORS errors</li>\n                                <li>Try disabling any content blockers</li>\n                                <li>Try a different browser</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n        \n        return [];\n    }\n}\n\n// No need for separate filterRatings function as filtering is now done in the ArDB query\n\n// Format and display a rating\nasync function displayRating(rating) {\n    try {\n        console.log('Displaying rating:', rating.id);\n        \n        // Get data from transaction\n        const data = {};\n        \n        // Extract tags into an object for easier access\n        const tags = {};\n        if (rating.tags) {\n            rating.tags.forEach(tag => {\n                tags[tag.name] = tag.value;\n                console.log(`Tag: ${tag.name} = ${tag.value}`);\n            });\n        }\n        \n        // Try to fetch transaction data content if available\n        let contentData = {};\n        try {\n            const txDataResp = await arweave.transactions.getData(rating.id, {decode: true, string: true});\n            if (txDataResp) {\n                console.log('Transaction data found:', txDataResp.substring(0, 100) + '...');\n                contentData = JSON.parse(txDataResp);\n            }\n        } catch (dataError) {\n            console.log('Could not get transaction data:', dataError.message);\n        }\n        \n        // Merge data from tags and content, with tags taking precedence\n        data.firstName = tags['First-Name'] || contentData.firstName || '';\n        data.middleName = tags['Middle-Name'] || contentData.middleName || '';\n        data.lastName = tags['Last-Name'] || contentData.lastName || '';\n        data.location = tags['Location'] || contentData.location || '';\n        data.associations = tags['Associations'] || contentData.associations || '';\n        data.score = parseInt(tags['Rating-Score']) || contentData.score || 0;\n        data.unixTime = parseInt(tags['Unix-Time']) || contentData.timestamp || 0;\n        data.comments = contentData.comments || '';\n        \n        // Get timestamp\n        const date = data.unixTime ? new Date(data.unixTime * 1000) : null;\n        const dateStr = date ? date.toLocaleString() : 'Unknown';\n        \n        // Generate full name\n        const nameParts = [data.firstName, data.middleName, data.lastName].filter(Boolean);\n        const fullName = nameParts.length > 0 ? nameParts.join(' ') : 'Anonymous';\n        \n        // Create rating element with fallbacks for missing data\n        return `\n            <div class=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n                <div class=\"flex items-center justify-between mb-4\">\n                    <h3 class=\"text-xl font-bold\">${fullName || 'Unknown Person'}</h3>\n                    <div class=\"${getScoreColorClass(data.score)} font-bold text-xl px-3 py-1 rounded-full\">\n                        ${data.score || '?'}/10\n                    </div>\n                </div>\n                \n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                    <div class=\"bg-gray-50 p-3 rounded border border-gray-100\">\n                        <h4 class=\"font-medium text-gray-700 mb-2\">Personal Details</h4>\n                        <ul class=\"space-y-1 text-sm\">\n                            <li><span class=\"font-semibold\">First Name:</span> ${data.firstName || '<span class=\"text-gray-400 italic\">Not provided</span>'}</li>\n                            <li><span class=\"font-semibold\">Middle Name:</span> ${data.middleName || '<span class=\"text-gray-400 italic\">Not provided</span>'}</li>\n                            <li><span class=\"font-semibold\">Last Name:</span> ${data.lastName || '<span class=\"text-gray-400 italic\">Not provided</span>'}</li>\n                        </ul>\n                    </div>\n                    \n                    <div class=\"bg-gray-50 p-3 rounded border border-gray-100\">\n                        <h4 class=\"font-medium text-gray-700 mb-2\">Additional Information</h4>\n                        <ul class=\"space-y-1 text-sm\">\n                            <li><span class=\"font-semibold\">Location:</span> ${data.location || '<span class=\"text-gray-400 italic\">Not provided</span>'}</li>\n                            <li><span class=\"font-semibold\">Associations:</span> ${data.associations || '<span class=\"text-gray-400 italic\">Not provided</span>'}</li>\n                            <li><span class=\"font-semibold\">Date Submitted:</span> ${dateStr}</li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div class=\"border-t pt-4\">\n                    <h4 class=\"font-bold mb-2\">Comments:</h4>\n                    <p class=\"bg-gray-50 p-3 rounded border border-gray-100\">${data.comments || '<span class=\"text-gray-400 italic\">No comments provided</span>'}</p>\n                </div>\n                <div class=\"mt-4 border-t pt-3\">\n                    <a href=\"https://arweave.net/${rating.id}\" target=\"_blank\" class=\"inline-block bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded text-sm\">\n                        <span class=\"flex items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                            </svg>\n                            View Transaction on Arweave\n                        </span>\n                    </a>\n                    <div class=\"text-xs text-gray-500 mt-1\">Transaction ID: ${rating.id.substring(0, 8)}...${rating.id.substring(rating.id.length - 8)}</div>\n                </div>\n            </div>\n        `;\n    } catch (error) {\n        console.error('Error displaying rating:', error);\n        return `\n            <div class=\"bg-white rounded-lg shadow-md p-6 mb-6 border-l-4 border-yellow-500\">\n                <h3 class=\"text-lg font-semibold text-yellow-700\">Transaction Found</h3>\n                <p class=\"mb-2\">This appears to be a RateAnybody transaction, but we couldn't display all the data.</p>\n                <div class=\"mt-4 border-t pt-3\">\n                    <a href=\"https://arweave.net/${rating.id}\" target=\"_blank\" class=\"inline-block bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded text-sm\">\n                        <span class=\"flex items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                            </svg>\n                            View Transaction on Arweave\n                        </span>\n                    </a>\n                    <div class=\"text-xs text-gray-500 mt-1\">Transaction ID: ${rating.id.substring(0, 8)}...${rating.id.substring(rating.id.length - 8)}</div>\n                </div>\n            </div>\n        `;\n    }\n}\n\n// Helper function to get score color class\nfunction getScoreColorClass(score) {\n    score = parseInt(score) || 0;\n    if (score >= 8) return 'bg-green-100 text-green-800';\n    if (score >= 6) return 'bg-blue-100 text-blue-800';\n    if (score >= 4) return 'bg-yellow-100 text-yellow-800';\n    if (score >= 2) return 'bg-orange-100 text-orange-800';\n    return 'bg-red-100 text-red-800';\n}\n\n// Update results\nasync function updateResults() {\n    resultsDiv.innerHTML = '<div class=\"text-center\">Loading...</div>';\n    \n    // Get all ratings\n    const ratings = await queryRatings();\n    \n    // Update count\n    resultsCount.textContent = `Found ${ratings.length} rating${ratings.length === 1 ? '' : 's'}`;\n    \n    // Clear results\n    resultsDiv.innerHTML = '';\n    \n    // Display ratings\n    if (ratings.length === 0) {\n        resultsDiv.innerHTML = '<div class=\"text-gray-500 text-center\">No ratings found matching your filters.</div>';\n        return;\n    }\n    \n    // Sort by timestamp descending (newest first)\n    ratings.sort((a, b) => {\n        const getUnixTime = (tx) => {\n            if (tx.tags) {\n                const timeTag = tx.tags.find(t => t.name === 'Unix-Time');\n                return parseInt(timeTag?.value || '0');\n            }\n            return 0;\n        };\n        return getUnixTime(b) - getUnixTime(a);\n    });\n    \n    // Display each rating\n    for (const rating of ratings) {\n        const html = await displayRating(rating);\n        resultsDiv.innerHTML += html;\n    }\n}\n\n// Event listeners\napplyFiltersBtn.addEventListener('click', updateResults);\n\n// Initial load\nupdateResults();\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","value","common_1","net_config_1","default","init","apiConfig","location","protocol","hostname","host","port","locationProtocol","replace","locationHost","locationPort","parseInt","defaultConfig","getDefaultConfig","globalThis","Arweave","self","ArweaveUtils","api","crypto","constructor","getBalance","address","then","response","data","getLastTransactionID","generate","generateJWK","jwkToAddress","jwk","getAddress","ownerToAddress","n","arweaveWallet","connect","getActiveAddress","owner","bufferTob64Url","hash","b64UrlToBuffer","error_1","Blocks","network","static","indepHash","HASH_ENDPOINT","status","Error","getByHeight","height","HEIGHT_ENDPOINT","getCurrent","current","getInfo","keyLength","publicExponent","hashAlgorithm","driver","detectWebCrypto","subtle","cryptoKey","generateKey","name","modulusLength","Uint8Array","exportKey","privateKey","kty","e","d","q","dp","dq","qi","sign","saltLength","signature","jwkToCryptoKey","algorithm","digest","verify","publicModulus","publicKey","key","jwkToPublicCryptoKey","salt0","salt32","saltLengthN","Math","ceil","byteLength","saltN","result","details","keyUsages","usages","saltLengthsAttempted","console","warn","JSON","stringify","importKey","publicJwk","every","encrypt","salt","initialKey","stringToBuffer","length","derivedkey","deriveKey","iterations","iv","getRandomValues","encryptedData","concatBuffers","decrypt","encrypted","slice","transaction_1","transaction_uploader_1","chunks","getTransactionAnchor","res","match","ok","statusText","getPrice","byteSize","targetAddress","endpoint","test","id","data_size","format","getData","fromRaw","attributes","search","tagName","tagValue","post","op","expr1","expr2","getStatus","confirmed","options","downloadChunkedData","error","resData","responseType","cause","decode","string","bufferToString","transaction","validJwk","obj","valid","map","isJwk","externalWallet","setOwner","dataToSign","getSignatureData","rawSignature","setSignature","getPermissions","includes","signedTransaction","reward","tags","signaturePayload","expectedId","parse","readInt32BE","toString","prepareChunks","uploader","getUploader","isComplete","uploadChunk","lastResponseStatus","lastResponseError","upload","ArrayBuffer","TransactionUploader","fromTransactionId","fromSerialized","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","apply","__importDefault","mod","block_1","log_1","arweave","logLevel","LOGS","ARWEAVE","reqType","after","afterRegex","emptyLinesRegex","fields","Set","log","getCursor","type","checkSearchType","ids","appName","tag","ts","values","push","$oTags","from","owners","to","recipients","min","block","max","limit","first","sort","cursor","only","indexOf","add","validateIncludes","toInclude","field","exclude","delete","find","filters","filter","keys","query","construct","run","findOne","txs","findAll","runAll","show","transactions","edges","edge","node","blocks","hasNextPage","isTx","r","concat","pageInfo","headers","params","substring","has","fee","quantity","parent","trim","merkle_1","FATAL_CHUNK_UPLOAD_ERRORS","chunkIndex","txPosted","lastRequestTimeEnd","totalErrors","totalChunks","uploadedChunks","pctComplete","trunc","assign","chunkIndex_","delay","Date","now","random","setTimeout","postTransaction","chunk","getChunk","validatePath","data_root","offset","data_path","resp","catch","message","getError","serialized","toJSON","deepHash","async","Array","isArray","utils","deepHashChunks","taggedHash","acc","hashPair","newAcc","regexLocalIp","split","tld","localStrings","isLocal","isIpv6","charAt","isIpAdress","shift","join","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","code","start","end","num","output","_id","_timestamp","timestamp","_height","_previous","previous","bignumber_js_1","BigNum","decimals","BigNumber","clone","DECIMAL_PLACES","winstonToAr","winstonString","formatted","number","stringToBigNum","shiftedBy","toFormat","toFixed","arToWinston","arString","compare","winstonStringA","winstonStringB","a","b","comparedTo","isEqual","isLessThan","isGreaterThan","plus","sub","minus","stringValue","decimalPlaces","isNumeric","mathceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","s","z","j","x","y","xc","c","yc","l","intCheck","String","isOdd","toExponential","str","toFixedPoint","zs","configObject","div","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","valueOf","ONE","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","v","alphabet","caseChanged","isNum","_isBigNumber","round","DEBUG","toUpperCase","toLowerCase","rm","c0","ne","maxOrMin","args","normalise","pop","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","arguments","minimum","rand","Uint32Array","copy","splice","sum","decimal","toBaseOut","baseIn","baseOut","arrL","reverse","callerIsToString","pow","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","isNaN","p1","p2","absoluteValue","abs","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","times","integerValue","isEqualTo","eq","isFinite","gt","isGreaterThanOrEqualTo","gte","lt","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","squareRoot","sqrt","rep","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","arrayCompare","MIN_CHUNK_SIZE","MAX_CHUNK_SIZE","chunkData","generateLeaves","computeRootHash","generateTree","generateTransactionChunks","leaves","root","buildLayers","proofs","generateProofs","lastChunk","maxByteRange","minByteRange","arrayFlatten","intToBuffer","bufferToInt","dest","leftBound","rightBound","path","HASH_SIZE","NOTE_SIZE","pathData","endOffsetBuffer","pathDataHash","chunkSize","left","right","offsetBuffer","remainder","pathHash","debug","proof","Buffer","utils_1","rest","nextChunkSize","dataHash","all","nodes","level","nextLayer","hashBranch","resolveBranchProofs","depth","partialProof","leftChild","rightChild","byteRange","input","flat","forEach","item","note","buffer","byte","index","SiloResource","siloURI","resource","parseUri","getAccessKey","getEncryptionKey","readTransactionData","parsed","siloName","hashIterations","accessKey","bufferTob64","encryptionkey","count","uri","encryptionKey","getUri","_anchor","anchor","_signature","_recipient","recipient","_owner","_fee","_quantity","_data","_tags","_block","_parent","Log","logs","YES","getConfig","logging","getPeers","Tag","deepHash_1","BaseObject","getOwnPropertyNames","b64UrlToString","super","last_tx","target","addTag","stringToB64Url","data_tree","idx","reduce","accumulator","tagList","buffers","total_length","b64UrlString","b64UrlEncode","b64UrlDecode","B64js","TextDecoder","fatal","TextEncoder","encode","padding","repeat","getTransactionOffset","getChunkData","firstChunkOffset","offsetResponse","size","startOffset","ar_1","api_1","node_driver_1","network_1","transactions_1","wallets_1","silo_1","chunks_1","blocks_1","wallets","ar","silo","createTransaction","createdTransaction","createSiloTransaction","siloUri","siloResource","siloTransaction","arql","ArweaveError","optional","getType","METHOD_GET","METHOD_POST","applyConfig","mergeDefaults","timeout","logger","request","method","body","Headers","append","baseURL","startsWith","fetch","url","contentType","charset","decodeText","arrayBuffer","text","addAsyncIterator","json","bodyWithIter","Symbol","asyncIterator","webIiterator","stream","reader","getReader","read","releaseLock","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","getter","definition","prop","toStringTag","ardb","graphql","production","window","nameFilter","document","getElementById","locationFilter","associationsFilter","scoreFilter","applyFiltersBtn","resultsDiv","resultsCount","displayRating","rating","contentData","txDataResp","dataError","firstName","middleName","lastName","associations","score","unixTime","comments","date","dateStr","toLocaleString","nameParts","Boolean","updateResults","innerHTML","ratings","toISOString","queryPromise","timeoutPromise","_","results","race","gatewayUrl","directError","queryRatings","textContent","getUnixTime","tx","timeTag","html","addEventListener"],"sourceRoot":""}